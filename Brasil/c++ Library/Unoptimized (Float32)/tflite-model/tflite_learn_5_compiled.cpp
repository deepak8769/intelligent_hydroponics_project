/* Generated by Edge Impulse
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
// Generated on: 15.11.2023 05:00:25

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#elif defined __ICCARM__
#define ALIGN(x) __attribute__((aligned(x)))
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#ifndef CONFIG_IDF_TARGET_ESP32S3
#define EI_MAX_SCRATCH_BUFFER_COUNT 4
#else
#define EI_MAX_SCRATCH_BUFFER_COUNT 4
#endif // CONFIG_IDF_TARGET_ESP32S3
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX) || defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
constexpr int kTensorArenaSize = 554624;
#else
constexpr int kTensorArenaSize = 553600;
#endif

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_CONV_2D, OP_MAX_POOL_2D, OP_RESHAPE, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

typedef struct {
  TfLiteTensor tensor;
  int16_t index;
} TfLiteTensorWithIndex;

typedef struct {
  TfLiteEvalTensor tensor;
  int16_t index;
} TfLiteEvalTensorWithIndex;

TfLiteContext ctx{};
static const int MAX_TFL_TENSOR_COUNT = 4;
static TfLiteTensorWithIndex tflTensors[MAX_TFL_TENSOR_COUNT];
static const int MAX_TFL_EVAL_COUNT = 4;
static TfLiteEvalTensorWithIndex tflEvalTensors[MAX_TFL_EVAL_COUNT];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[11];

const TfArray<4, int> tensor_dimension0 = { 4, { 1,96,96,3 } };
const ALIGN(16) float tensor_data1[12] = { 0.10220197588205338, -0.014542044140398502, 0.010250234976410866, -0.0069969352334737778, 0.096908368170261383, 0.013955025933682919, 0.17553599178791046, -0.095074467360973358, 0.030936779454350471, 0.01736517995595932, -0.054531790316104889, -0.075982429087162018, };
const TfArray<1, int> tensor_dimension1 = { 1, { 12 } };
const ALIGN(16) float tensor_data2[12] = { -0.055048968642950058, -0.015798898413777351, 0.024213757365942001, -0.0678597092628479, -0.0017703607445582747, -0.042151220142841339, -0.084484584629535675, -0.032324943691492081, -0.062037423253059387, 0.093483366072177887, -0.02216508612036705, -0.018819846212863922, };
const TfArray<1, int> tensor_dimension2 = { 1, { 12 } };
const ALIGN(16) float tensor_data3[8] = { 0.031933680176734924, -0.057047117501497269, -0.07719796895980835, 0.10662077367305756, -0.1109793484210968, 0.077901221811771393, 0.079873748123645782, -0.023356828838586807, };
const TfArray<1, int> tensor_dimension3 = { 1, { 8 } };
const ALIGN(16) float tensor_data4[8] = { 0.079654857516288757, 0.094695448875427246, -0.11606952548027039, -0.093363992869853973, -0.14032559096813202, -0.13830713927745819, -0.051551211625337601, 0.00091390276793390512, };
const TfArray<1, int> tensor_dimension4 = { 1, { 8 } };
const ALIGN(16) float tensor_data5[12*3*3*3] = { 
  /* [0][0][][] */ -0.085054002702236176,-0.14112271368503571,-0.012268501333892345, -0.20838189125061035,0.077455528080463409,0.12561547756195068, -0.11184138059616089,-0.20173180103302002,0.14603126049041748, 
  /* [0][1][][] */ 0.022879891097545624,-0.016365483403205872,-0.19305402040481567, -0.15570078790187836,-0.23876997828483582,-0.084658674895763397, -0.21863940358161926,0.046636905521154404,-0.086757726967334747, 
  /* [0][2][][] */ -0.2268756777048111,0.1102360337972641,-0.18237677216529846, 0.052366558462381363,-0.075574658811092377,0.13452711701393127, 0.095820792019367218,0.24991811811923981,0.22643975913524628, 
  /* [1][0][][] */ -0.23790150880813599,-0.062013920396566391,0.0073660388588905334, 0.11545567959547043,-0.23612649738788605,-0.039351686835289001, 0.017523739486932755,-0.1002354621887207,0.13053914904594421, 
  /* [1][1][][] */ 0.1062079444527626,-0.035770390182733536,-0.30895087122917175, 0.23651142418384552,0.13019600510597229,-0.16546982526779175, 0.21442887187004089,0.0060202796012163162,-0.2359401136636734, 
  /* [1][2][][] */ -0.075843438506126404,-0.22369849681854248,-0.078171625733375549, 0.22348125278949738,0.068834930658340454,0.11476995795965195, -0.10782346874475479,-0.14881274104118347,-0.18343709409236908, 
  /* [2][0][][] */ 0.093106642365455627,0.21235466003417969,-0.23511025309562683, -0.10017444938421249,0.11295208334922791,-0.35476580262184143, 0.0039972974918782711,-0.10596797615289688,-0.039426904171705246, 
  /* [2][1][][] */ -0.12362591922283173,0.15520071983337402,-0.31449219584465027, 0.10393448919057846,0.0019887702073901892,-0.24791528284549713, -0.052619230002164841,0.092100284993648529,-0.16543954610824585, 
  /* [2][2][][] */ -0.22503398358821869,0.10182373970746994,-0.38171812891960144, -0.21442076563835144,0.15365308523178101,-0.37721019983291626, 0.072737596929073334,0.17315584421157837,-0.21611021459102631, 
  /* [3][0][][] */ -0.25043639540672302,-0.011376331560313702,-0.30010139942169189, 0.14915098249912262,0.23043262958526611,0.12725698947906494, -0.19424070417881012,0.23789551854133606,-0.016210060566663742, 
  /* [3][1][][] */ -0.24129919707775116,-0.015175111591815948,-0.09916020929813385, 0.10087528079748154,0.035850316286087036,0.17978860437870026, -0.14601011574268341,0.13858526945114136,-0.0021420824341475964, 
  /* [3][2][][] */ -0.19445221126079559,0.22058472037315369,0.080202795565128326, -0.084442339837551117,0.15935565531253815,0.050858184695243835, -0.04126870259642601,0.036849271506071091,0.23369687795639038, 
  /* [4][0][][] */ 0.26210582256317139,0.10637130588293076,0.38687852025032043, -0.14486353099346161,-0.073425248265266418,-0.16102227568626404, -0.24295152723789215,-0.38707754015922546,0.019160009920597076, 
  /* [4][1][][] */ -0.12996482849121094,0.26250749826431274,0.21214516460895538, -0.32869243621826172,-0.11201830208301544,-0.24641460180282593, -0.05559748038649559,-0.28292736411094666,0.072324320673942566, 
  /* [4][2][][] */ 0.028103696182370186,-0.21205402910709381,0.041089117527008057, -0.12390557676553726,-0.23110564053058624,-0.15942025184631348, -0.15863305330276489,0.083533167839050293,0.1055019199848175, 
  /* [5][0][][] */ 0.027150478214025497,-0.1814330518245697,0.089991271495819092, 0.2581082284450531,-0.25957709550857544,0.0023988836910575628, 0.21505977213382721,-0.28456631302833557,0.018814187496900558, 
  /* [5][1][][] */ 0.27678868174552917,-0.1378091424703598,-0.074164427816867828, 0.068741746246814728,-0.080323100090026855,-0.0042018713429570198, 0.10136867314577103,-0.21470066905021667,-0.18811546266078949, 
  /* [5][2][][] */ 0.14465095102787018,-0.11786847561597824,-0.18728694319725037, -0.032596196979284286,-0.25195372104644775,0.14694292843341827, -0.019028495997190475,-0.22161144018173218,-0.069385699927806854, 
  /* [6][0][][] */ 0.053082853555679321,-0.16611775755882263,0.01980762742459774, -0.24572515487670898,-0.11750724911689758,-0.085839748382568359, -0.3087424635887146,-0.20132929086685181,-0.18549376726150513, 
  /* [6][1][][] */ -0.27838826179504395,-0.21429905295372009,-0.30862927436828613, -0.0031027987133711576,0.22937925159931183,0.19966866075992584, -0.041389245539903641,-0.077405489981174469,-0.14161182940006256, 
  /* [6][2][][] */ -0.046038862317800522,-0.23748743534088135,-0.078329786658287048, -0.20348820090293884,-0.11194466054439545,-0.062935382127761841, -0.17955558001995087,0.078836768865585327,-0.0021964742336422205, 
  /* [7][0][][] */ 0.11762499064207077,-0.071439117193222046,0.12309747934341431, -0.13387124240398407,-0.20945662260055542,0.25145971775054932, -0.12508666515350342,-0.21251325309276581,0.19781447947025299, 
  /* [7][1][][] */ 0.053592532873153687,0.023696755990386009,0.18576182425022125, -0.072307877242565155,0.082396186888217926,0.23621325194835663, 0.17824512720108032,0.11585137993097305,0.31877890229225159, 
  /* [7][2][][] */ 0.15773589909076691,0.042027126997709274,0.036645043641328812, 0.14824502170085907,0.1644400954246521,0.23105178773403168, 0.10006965696811676,-0.22831656038761139,0.041390553116798401, 
  /* [8][0][][] */ 0.096662655472755432,0.021471235901117325,-0.38451513648033142, 0.02934940904378891,-0.029236869886517525,-0.20518434047698975, 0.052801314741373062,0.17158639430999756,-0.28640437126159668, 
  /* [8][1][][] */ -0.034484919160604477,0.052373729646205902,-0.26538112759590149, -0.18890242278575897,-0.030032370239496231,-0.070951856672763824, -0.025019383057951927,0.045366391539573669,-0.1616794764995575, 
  /* [8][2][][] */ 0.05842280387878418,-0.00095818610861897469,0.06432873010635376, -0.12095291912555695,0.17321841418743134,-0.24865090847015381, -0.059164460748434067,-0.032460633665323257,-0.043050553649663925, 
  /* [9][0][][] */ -0.19578081369400024,0.027025898918509483,-0.39960929751396179, 0.035066470503807068,0.23720040917396545,-0.10318606346845627, -0.064354352653026581,0.23297278583049774,-0.23847730457782745, 
  /* [9][1][][] */ -0.086586453020572662,-0.15241207182407379,-0.1117679625749588, 0.19224633276462555,-0.032323174178600311,-0.013565734028816223, -0.21769902110099792,-0.091025717556476593,-0.039765406399965286, 
  /* [9][2][][] */ -0.09997907280921936,0.23345114290714264,-0.35876309871673584, 0.029452260583639145,0.095323994755744934,-0.047386240214109421, -0.16470305621623993,0.19362378120422363,0.10620337724685669, 
  /* [10][0][][] */ 0.10067562758922577,-0.096525013446807861,-0.27386623620986938, -0.21355603635311127,0.0067546423524618149,-0.34307464957237244, -0.050474487245082855,-0.090183146297931671,-0.3552146852016449, 
  /* [10][1][][] */ 0.018194975331425667,0.14487418532371521,0.24299298226833344, 0.040694206953048706,-0.078416548669338226,0.02631092444062233, 0.041410226374864578,-0.15524487197399139,0.24727202951908112, 
  /* [10][2][][] */ 0.0077776927500963211,-0.037187788635492325,0.13787645101547241, 0.10773212462663651,0.23098170757293701,0.14613401889801025, -0.14878855645656586,-0.083448149263858795,0.1434876024723053, 
  /* [11][0][][] */ -0.043303057551383972,0.076492324471473694,0.23327198624610901, 0.047941125929355621,-0.018407704308629036,-0.0036224301438778639, -0.032665323466062546,-0.24405287206172943,0.096643112599849701, 
  /* [11][1][][] */ -0.075076714158058167,0.17330420017242432,0.25469616055488586, 0.035897232592105865,-0.093358136713504791,0.2098722904920578, -0.060017317533493042,0.12585970759391785,0.030134722590446472, 
  /* [11][2][][] */ 0.16948458552360535,0.10806147009134293,0.14078736305236816, 0.09996999055147171,0.041515830904245377,-0.13007788360118866, -0.041656691581010818,0.025254921987652779,-0.15608584880828857, 
};
const TfArray<4, int> tensor_dimension5 = { 4, { 12,3,3,3 } };
const ALIGN(16) float tensor_data6[12*3*3*12] = { 
  /* [0][0][][] */ 0.15544690191745758,-0.24471648037433624,0.012730955146253109,-0.13058501482009888,0.24692907929420471,0.13379895687103271,0.11824538558721542,-0.26733440160751343,0.096065260469913483,0.26722019910812378,-0.015184285119175911,-0.23361840844154358, 0.11028186976909637,-0.15204307436943054,-0.045144829899072647,-0.19587786495685577,0.17974787950515747,0.030634894967079163,0.0092956870794296265,-0.10965339839458466,-0.17317134141921997,0.031884144991636276,-0.091315321624279022,0.029788784682750702, 0.17116262018680573,0.028716076165437698,0.083843238651752472,-0.24294401705265045,0.26865118741989136,-0.17156082391738892,0.031900685280561447,-0.17326338589191437,-0.16207732260227203,-0.11320558190345764,-0.25502049922943115,-0.2198178768157959, 
  /* [0][1][][] */ 0.11407899856567383,-0.20211389660835266,0.025087183341383934,0.15180040895938873,0.1652529239654541,-0.11265414953231812,-0.06605251133441925,-0.032276604324579239,-0.074671037495136261,0.02063472755253315,-0.0052711376920342445,-0.021885907277464867, -0.12781703472137451,-0.081240177154541016,0.12055203318595886,-0.16277530789375305,0.0077462685294449329,-0.08133552223443985,-0.130265012383461,-0.069800414144992828,0.066994927823543549,0.12519621849060059,0.1012645810842514,0.16413408517837524, 0.19185148179531097,-0.1920887678861618,0.079288236796855927,0.040130626410245895,-0.032328534871339798,-0.27840426564216614,-0.12876719236373901,-0.1171150803565979,-0.27177134156227112,-0.17457267642021179,0.18757304549217224,-0.13676446676254272, 
  /* [0][2][][] */ 0.051077540963888168,-0.15887445211410522,-0.028071107342839241,0.069145947694778442,-0.12299449741840363,-0.32626760005950928,-0.20736746490001678,0.16666480898857117,-0.21172881126403809,0.048295605927705765,-0.03474016860127449,0.034858286380767822, -0.2063497006893158,-0.28254956007003784,0.099847622215747833,0.17285381257534027,-0.17295987904071808,0.038318198174238205,-0.2518785297870636,0.26215693354606628,-0.16543629765510559,-0.18557280302047729,0.14271716773509979,0.24808956682682037, 0.052824299782514572,0.056316766887903214,-0.23283950984477997,0.13613474369049072,-0.1055656373500824,-0.20758140087127686,-0.26161426305770874,0.20558160543441772,-0.24717232584953308,-0.039446655660867691,-0.068284489214420319,-0.081553719937801361, 
  /* [1][0][][] */ -0.24090413749217987,0.07189728319644928,0.06018606573343277,0.12274441868066788,0.19099856913089752,-0.013023716397583485,-0.15921500325202942,-0.19829130172729492,0.014053451828658581,0.042081773281097412,0.20344188809394836,-0.091266132891178131, -0.11667086184024811,0.058976054191589355,0.12501753866672516,-0.062581762671470642,0.1478760689496994,-0.12249240279197693,-0.043235864490270615,-0.21658061444759369,0.1978018581867218,-0.048456016927957535,0.02573467418551445,0.17793448269367218, -0.054820243269205093,0.2010357528924942,0.27817469835281372,0.082800999283790588,-0.22809097170829773,-0.093300633132457733,-0.37108385562896729,0.11293119192123413,0.023262608796358109,0.069270692765712738,0.090857461094856262,0.0093705989420413971, 
  /* [1][1][][] */ -0.10708604007959366,-0.11678625643253326,0.059099778532981873,0.002144127618521452,0.21882885694503784,0.073435120284557343,-0.020471272990107536,-0.19200876355171204,0.20488053560256958,0.15216317772865295,0.19471900165081024,0.11008612066507339, -0.068197712302207947,-0.16200719773769379,0.17196215689182281,0.1066412627696991,-0.1224878653883934,0.12576077878475189,-0.23120610415935516,0.071240261197090149,-0.0022977124899625778,0.16228042542934418,0.019881457090377808,-0.15309880673885345, 0.056690506637096405,0.0090909982100129128,0.21366871893405914,0.036478269845247269,-0.12849026918411255,0.061052773147821426,-0.22911857068538666,-0.14136521518230438,-0.12736567854881287,0.1927255392074585,-0.027276398614048958,0.14204874634742737, 
  /* [1][2][][] */ 0.022260094061493874,-0.19954834878444672,0.17518661916255951,0.041505686938762665,-0.09689011424779892,0.048373430967330933,-0.10840773582458496,0.07142370194196701,0.13436847925186157,0.20509551465511322,0.12657910585403442,0.065733030438423157, -0.026556143537163734,-0.029282322153449059,0.1756187379360199,0.056700602173805237,0.024510880932211876,-0.057694666087627411,-0.13218590617179871,-0.1138385608792305,0.0058757574297487736,0.076268434524536133,-0.071749843657016754,-0.087673589587211609, 0.11495647579431534,0.11605104804039001,0.15300202369689941,-0.014757093042135239,0.068451181054115295,0.10911563783884048,-0.37889271974563599,0.12834259867668152,-0.040823649615049362,-0.020552398636937141,-0.0039553442038595676,-0.13259150087833405, 
  /* [2][0][][] */ 0.16052992641925812,0.044935308396816254,-0.081732198596000671,0.021044787019491196,0.12943032383918762,-0.19320976734161377,0.18223321437835693,-0.043835107237100601,0.067240886390209198,0.019303224980831146,0.057400081306695938,0.076156884431838989, 0.19022990763187408,0.1596205085515976,-0.043679229915142059,-0.061365120112895966,0.2344074547290802,-0.25756153464317322,0.015516785904765129,0.061116807162761688,0.19593144953250885,-0.06918557733297348,0.0042861276306211948,-0.16862717270851135, 0.14789074659347534,0.10352915525436401,-0.025960732251405716,-0.037001930177211761,0.1992480605840683,-0.2012631744146347,0.10404930263757706,-0.083182446658611298,0.17875467240810394,0.12441829591989517,0.17499262094497681,0.20001906156539917, 
  /* [2][1][][] */ 0.20978820323944092,-0.13952845335006714,0.017194725573062897,-0.021070726215839386,0.38238289952278137,-0.0087473411113023758,0.23970416188240051,0.23467892408370972,0.15737146139144897,0.054358586668968201,0.11747154593467712,-0.081928439438343048, 0.24054525792598724,0.1267542690038681,-0.1852489709854126,0.12667497992515564,-0.08522670716047287,-0.0007180797983892262,0.1660865992307663,0.17931190133094788,0.21763330698013306,-0.056608345359563828,0.037218470126390457,0.027321895584464073, 0.10355325043201447,0.023520927876234055,-0.1597202867269516,0.10930737107992172,0.30249235033988953,-0.027571782469749451,0.12491830438375473,0.081979915499687195,0.035605501383543015,-0.18711563944816589,0.13605880737304688,0.086746640503406525, 
  /* [2][2][][] */ -0.060530614107847214,-0.073466554284095764,-0.05296553298830986,0.10303784161806107,0.36568862199783325,-0.12170862406492233,0.25977990031242371,-0.23064734041690826,0.10327199101448059,0.10176844894886017,0.14992749691009521,-0.13754107058048248, 0.23530621826648712,0.0068212095648050308,-0.20036210119724274,-0.026927795261144638,-0.0004897719481959939,-0.087160415947437286,0.096122071146965027,-0.22169125080108643,-0.19905199110507965,0.067822448909282684,0.098906464874744415,-0.19222919642925262, 0.25750395655632019,-0.15402461588382721,-0.035932332277297974,-0.22214145958423615,-0.044764034450054169,-0.22391004860401154,0.24918252229690552,-0.31178799271583557,0.098372690379619598,-0.18003812432289124,-0.14117564260959625,-0.24024516344070435, 
  /* [3][0][][] */ 0.16190795600414276,0.1304430216550827,-0.010595104657113552,-0.0046230875886976719,0.11194479465484619,0.011721358634531498,-0.041582316160202026,0.21223683655261993,-0.23598361015319824,-0.13515438139438629,0.10645429790019989,0.12441602349281311, -0.022451017051935196,-0.089954614639282227,0.099076710641384125,0.10363514721393585,0.044040113687515259,-0.036030571907758713,-0.27559307217597961,0.089556939899921417,0.056586604565382004,0.039076831191778183,0.067304722964763641,-0.0084925629198551178, 0.097640402615070343,0.099740520119667053,0.17561040818691254,0.16327427327632904,0.028547359630465508,-0.17662131786346436,-0.23979215323925018,0.092313647270202637,0.18808412551879883,0.17507690191268921,0.28260022401809692,0.014503552578389645, 
  /* [3][1][][] */ -0.030700372532010078,-0.0061030560173094273,0.037467524409294128,-0.075357742607593536,0.069917924702167511,0.044075820595026016,-0.11332491785287857,-0.041327148675918579,-0.13567747175693512,-0.22010983526706696,-0.28377309441566467,0.12846280634403229, -0.090141229331493378,-0.16984647512435913,-0.076114311814308167,0.024100759997963905,0.33642828464508057,0.064545832574367523,0.067493915557861328,-0.047314323484897614,0.1876552402973175,0.06282448023557663,-0.098824970424175262,-0.056875184178352356, -0.066246084868907928,0.14694418013095856,0.11438265442848206,0.18234799802303314,0.11681228131055832,-0.26292362809181213,-0.036497272551059723,0.01943405345082283,-0.05552026629447937,-0.079676985740661621,-0.049262426793575287,-0.10823647677898407, 
  /* [3][2][][] */ 0.012459419667720795,0.16597908735275269,-0.064711079001426697,-0.093924269080162048,0.01007726788520813,-0.085360780358314514,0.012350544333457947,0.081482462584972382,-0.14154195785522461,-0.034339867532253265,-0.021617965772747993,-0.12886063754558563, 0.060752727091312408,-0.011534065939486027,-0.01050534937530756,-0.045517422258853912,0.062913857400417328,0.056618444621562958,0.17496252059936523,-0.13906966149806976,-0.034730032086372375,-0.084596388041973114,0.087131261825561523,0.0087785450741648674, -0.14486363530158997,-0.032264824956655502,-0.066251941025257111,-0.056458119302988052,-0.29658970236778259,-0.19001694023609161,0.10086873173713684,0.051544543355703354,-0.11221925914287567,0.13329708576202393,-0.19245347380638123,0.026448305696249008, 
  /* [4][0][][] */ -0.10348733514547348,0.060539141297340393,0.24267017841339111,0.18463931977748871,0.12181457132101059,0.097294896841049194,-0.073001690208911896,-0.099255330860614777,0.11324268579483032,0.21586364507675171,0.031405612826347351,-0.05136428028345108, 0.031777173280715942,-0.0064026522450149059,0.020577607676386833,0.17110584676265717,-0.056824628263711929,0.1217048317193985,-0.0022905252408236265,-0.19377511739730835,0.018273495137691498,0.20204800367355347,0.083002761006355286,-0.08390238881111145, 0.11076749116182327,0.023844541981816292,0.1834128201007843,0.1086573600769043,0.18685849010944366,0.18446820974349976,-0.31611752510070801,0.0064131328836083412,-0.10630924999713898,0.19960863888263702,-0.1381620317697525,0.19791038334369659, 
  /* [4][1][][] */ 0.083852149546146393,0.062954790890216827,0.20530492067337036,-0.10280114412307739,0.28981941938400269,-0.048607364296913147,0.077842779457569122,-0.069741599261760712,0.24172864854335785,0.17767909169197083,-0.0037731998600065708,0.004336175974458456, -0.0128672169521451,-0.0038298657163977623,0.052838113158941269,-0.0014135300880298018,0.16318096220493317,0.059617739170789719,-0.055909778922796249,-0.15477965772151947,0.10813529044389725,0.25199228525161743,-0.0035950110759586096,0.050800561904907227, 0.042864520102739334,0.013184085488319397,0.18169958889484406,0.13796339929103851,0.03492293506860733,0.17814457416534424,-0.36272820830345154,0.14679956436157227,0.088192038238048553,0.066383667290210724,-0.035093128681182861,0.12447769194841385, 
  /* [4][2][][] */ 0.15162074565887451,0.013332227244973183,0.1607353687286377,0.19187277555465698,0.17428120970726013,0.060123071074485779,0.0677071213722229,-0.11721960455179214,0.030525797978043556,0.16210143268108368,0.030231686308979988,-0.077486276626586914, 0.24571993947029114,0.14650852978229523,0.31500884890556335,0.17918223142623901,-0.3160439133644104,0.044279307126998901,-0.19398634135723114,-0.00069987575989216566,0.00037111688288860023,0.34101065993309021,-0.0006541881593875587,-0.093851134181022644, -0.077029265463352203,-0.089359268546104431,0.1703612357378006,0.083765208721160889,-0.18794040381908417,-0.022420881316065788,-0.34165173768997192,0.059292227029800415,0.087571166455745697,0.25141817331314087,0.10950528085231781,-0.075191110372543335, 
  /* [5][0][][] */ -0.10460039973258972,0.11020417511463165,-0.045726712793111801,0.019947485998272896,0.10241299122571945,-0.046730119735002518,-0.20292872190475464,0.091872997581958771,-0.1241300031542778,0.042298208922147751,-0.084718219935894012,-0.061669811606407166, 0.06606794148683548,-0.068233415484428406,-0.099466614425182343,-0.16534124314785004,0.11225306242704391,0.12856034934520721,-0.18436978757381439,-0.068089142441749573,-0.11062481999397278,0.097468733787536621,-0.10247727483510971,-0.12455154955387115, 0.11963848769664764,-0.17283938825130463,-0.012773261405527592,-0.10095712542533875,0.047216013073921204,-0.039550259709358215,-0.075701259076595306,0.14620320498943329,-0.10964781790971756,0.029388358816504478,-0.00079283351078629494,-0.13290725648403168, 
  /* [5][1][][] */ -0.050588417798280716,-0.15187340974807739,0.11710881441831589,0.084814123809337616,-0.07339400053024292,-0.066861294209957123,-0.060961887240409851,-0.047793399542570114,-0.0020185972098261118,0.085487604141235352,-0.14777624607086182,-0.13752585649490356, 0.058477818965911865,0.052441727370023727,0.15785069763660431,-0.12259513139724731,0.12056850641965866,0.11552919447422028,-0.14241725206375122,0.017987404018640518,-0.064679302275180817,-0.16954965889453888,-0.16945992410182953,-0.078392103314399719, 0.040247298777103424,-0.15932819247245789,0.024351105093955994,-0.12780192494392395,0.030427515506744385,-0.10104021430015564,0.064709365367889404,-0.08640279620885849,0.02529829740524292,0.12397976219654083,-0.15891376137733459,-0.052969522774219513, 
  /* [5][2][][] */ -0.07488211989402771,-0.12101246416568756,-0.096553884446620941,-0.045800667256116867,0.035635989159345627,-0.044558141380548477,0.012525379657745361,0.030362093821167946,-0.0094990991055965424,0.05522783100605011,-0.047547511756420135,-0.13868477940559387, -0.14811153709888458,-0.15432164072990417,-0.16911041736602783,0.046458512544631958,-0.14615955948829651,-0.0004314009565860033,-0.091408930718898773,0.13573364913463593,0.063781000673770905,-0.17090874910354614,-0.042512521147727966,-0.033932149410247803, -0.021052641794085503,0.067496314644813538,0.038688790053129196,0.129262775182724,-0.1865522563457489,-0.20762750506401062,-0.11558679491281509,-0.060699421912431717,-0.08951772004365921,0.0771946981549263,-0.020941663533449173,-0.15990254282951355, 
  /* [6][0][][] */ 0.45930942893028259,0.0064596417360007763,-0.027827218174934387,-0.048164688050746918,0.10796058177947998,-0.06535908579826355,0.18554840981960297,-0.16884805262088776,-0.044403832405805588,0.22937339544296265,-0.1979871541261673,-0.24827517569065094, 0.35427215695381165,0.14228951930999756,0.053962312638759613,0.066469721496105194,0.035139862447977066,-0.22281920909881592,0.0014637839049100876,-0.11953714489936829,-0.04982341080904007,0.052184019237756729,-0.063512474298477173,-0.028585907071828842, 0.054278787225484848,-0.22868789732456207,0.20776054263114929,-0.094687245786190033,-0.11837094277143478,-0.0079725226387381554,0.020800305530428886,0.16845352947711945,-0.15925613045692444,0.1435026079416275,-0.2409081906080246,0.017515987157821655, 
  /* [6][1][][] */ -0.022433880716562271,-0.31980830430984497,-0.23435480892658234,0.14566083252429962,0.01835213415324688,0.02897472120821476,-0.044352926313877106,0.11649604141712189,-0.097899086773395538,-0.041395209729671478,0.23339873552322388,-0.096498884260654449, -0.045218855142593384,0.063787311315536499,0.032457556575536728,0.27601674199104309,-0.089080259203910828,-0.091749377548694611,-0.41069808602333069,0.2222219854593277,0.072317436337471008,0.21535214781761169,0.032009661197662354,0.0886668860912323, -0.03834359347820282,-0.16304604709148407,0.074792176485061646,0.0029155637603253126,-0.1650201678276062,-0.063052371144294739,-0.33726808428764343,0.029186489060521126,-0.12528936564922333,-0.19772711396217346,0.094998098909854889,-0.04062189906835556, 
  /* [6][2][][] */ 0.030319824814796448,-0.21871475875377655,-0.10229969024658203,-0.15744780004024506,0.13127888739109039,0.21871063113212585,0.11983376741409302,-0.056123640388250351,0.10811631381511688,0.1353006511926651,-0.12540386617183685,-0.16935257613658905, 0.2200198620557785,0.054703403264284134,0.14465470612049103,0.1349395215511322,0.26848092675209045,-0.056621275842189789,-0.22029438614845276,-0.012750905938446522,0.039644930511713028,0.15322957932949066,-0.23707613348960876,-0.13881507515907288, 0.15117436647415161,-0.22047537565231323,0.4036845862865448,-0.011965605430305004,-0.26786774396896362,-0.35848340392112732,-0.1061922013759613,0.22574727237224579,0.066412635147571564,0.147525355219841,-0.28652182221412659,0.12659142911434174, 
  /* [7][0][][] */ -0.22395986318588257,-0.068982742726802826,0.25131514668464661,0.014983318746089935,-0.12321078032255173,0.19129049777984619,-0.23217526078224182,-0.038671970367431641,0.18623372912406921,0.25046443939208984,0.14135982096195221,-0.062689237296581268, -0.024893214926123619,-0.033118966966867447,0.22887970507144928,0.056363843381404877,0.076732702553272247,-0.056576300412416458,-0.31094756722450256,-0.069002501666545868,0.14160990715026855,-0.023551873862743378,-0.10223323106765747,-0.017407327890396118, -0.18321415781974792,-0.070374093949794769,0.018231570720672607,-0.010472332127392292,0.050275586545467377,0.098177284002304077,-0.2714972198009491,-0.0083844009786844254,0.016502546146512032,0.019015731289982796,-0.096617467701435089,0.097913853824138641, 
  /* [7][1][][] */ -0.32520225644111633,0.019049521535634995,0.18645501136779785,-0.029467912390828133,0.10061871260404587,0.010746616870164871,-0.17861877381801605,-0.15292763710021973,0.13811512291431427,0.0088342474773526192,0.16982235014438629,0.048678852617740631, -0.15672698616981506,0.068103522062301636,0.29201510548591614,-0.058566376566886902,0.091713711619377136,-0.1159680038690567,-0.068241134285926819,-0.18532358109951019,0.028775433078408241,0.18299049139022827,-0.13777661323547363,-0.15455359220504761, -0.072228826582431793,0.13054685294628143,0.047356400638818741,-0.055282410234212875,-0.1231018528342247,0.041791707277297974,-0.25273650884628296,0.10525179654359818,0.034052621573209763,0.22437760233879089,-0.12554687261581421,-0.026911718770861626, 
  /* [7][2][][] */ -0.20797102153301239,-0.036021050065755844,0.31462258100509644,0.11772119253873825,-0.17382311820983887,-0.039859600365161896,-0.12379288673400879,-0.011328147724270821,0.19294872879981995,0.010364668443799019,0.042842809110879898,-0.14047631621360779, 0.10665717720985413,-0.11630743741989136,0.30780965089797974,-0.12472262233495712,-0.080712974071502686,-0.13756734132766724,-0.29299101233482361,-0.18880431354045868,0.076043516397476196,0.15116506814956665,-0.048097044229507446,0.065797828137874603, 0.21322429180145264,0.13325701653957367,0.10428939759731293,0.16549165546894073,-0.22211796045303345,0.11324980109930038,-0.22130091488361359,0.17421504855155945,-0.14725792407989502,0.13419495522975922,0.11195340752601624,-0.061187107115983963, 
  /* [8][0][][] */ 0.089781299233436584,-0.12936262786388397,0.30986034870147705,-0.11048194020986557,0.23973378539085388,-0.11541885882616043,0.037398744374513626,-0.098475463688373566,0.15848098695278168,0.14738225936889648,-0.11679250001907349,0.053947251290082932, -0.09569927304983139,-0.098402634263038635,0.12723705172538757,-0.082040585577487946,0.34155154228210449,0.16768217086791992,0.23688270151615143,-0.28472578525543213,0.22491995990276337,0.20245237648487091,-0.066689610481262207,0.026088085025548935, 0.059025458991527557,-0.096317604184150696,0.0065151038579642773,0.064116671681404114,0.18781456351280212,0.055302552878856659,-0.00046388799091801047,-0.090345114469528198,0.059417720884084702,0.045098595321178436,0.0098677324131131172,-0.15670555830001831, 
  /* [8][1][][] */ -0.057524587959051132,-0.063832849264144897,0.087554745376110077,0.17239286005496979,-0.085799433290958405,-0.17842184007167816,-0.28041091561317444,0.13999682664871216,0.11855828016996384,0.056223254650831223,0.11568190157413483,0.0010850334074348211, 0.0047039631754159927,0.075230136513710022,0.28078523278236389,0.066614381968975067,-0.023882633075118065,-0.14241820573806763,0.0085280407220125198,0.028228787705302238,-0.025399437174201012,0.19279091060161591,0.25634917616844177,0.045036245137453079, 0.1054973229765892,0.0778169184923172,-0.033126220107078552,0.18339796364307404,-0.10755511373281479,-0.11047198623418808,-0.33481863141059875,-0.1205865666270256,-0.062390595674514771,0.080222897231578827,0.15727461874485016,-0.011847808957099915, 
  /* [8][2][][] */ -0.074742093682289124,-0.32106643915176392,0.24849279224872589,0.0023470262531191111,-0.22964298725128174,-0.16632215678691864,-0.17779500782489777,0.12902350723743439,0.074402742087841034,-0.018839327618479729,-0.079761408269405365,0.097702212631702423, -0.040378905832767487,-0.12358996272087097,0.15371546149253845,0.067798025906085968,-0.12134933471679688,-0.16196164488792419,-0.016953239217400551,0.14026816189289093,-0.078453890979290009,-0.017031136900186539,0.03985205665230751,0.012078843079507351, -0.14004224538803101,-0.11664608120918274,-0.084256812930107117,-0.014837309718132019,0.037764407694339752,0.08140680193901062,-0.022609470412135124,0.052554097026586533,-0.0041472660377621651,0.12244953215122223,0.041229657828807831,-0.067673832178115845, 
  /* [9][0][][] */ -0.039418257772922516,0.26765087246894836,-0.086238645017147064,-0.13672326505184174,0.10543309897184372,0.43216225504875183,-0.21982143819332123,0.06116504967212677,-0.024639533832669258,-0.022771984338760376,-0.018025090917944908,0.060252584517002106, -0.023967644199728966,0.07532048225402832,-0.090972036123275757,0.094368249177932739,-0.016116112470626831,0.48928791284561157,-0.048977300524711609,-0.06968003511428833,-0.10129131376743317,-0.0039002178236842155,0.09203348308801651,0.012431821785867214, -0.21918579936027527,0.20059385895729065,-0.1898999959230423,0.19922332465648651,-0.039321180433034897,0.17054598033428192,-0.12217210978269577,0.15361465513706207,-0.17649552226066589,0.19794224202632904,0.10277307033538818,0.029624752700328827, 
  /* [9][1][][] */ -0.11524130403995514,0.21555624902248383,-0.24815289676189423,-0.17859932780265808,0.10374615341424942,0.26602986454963684,-0.13031215965747833,-0.11846433579921722,-0.21264633536338806,-0.19342239201068878,0.15787065029144287,-0.22454676032066345, -0.080847807228565216,0.23892417550086975,-0.023385612294077873,0.21987403929233551,-0.18021717667579651,0.43664595484733582,-0.19379681348800659,-0.12230278551578522,-0.020009985193610191,0.25296491384506226,0.018873650580644608,0.069856159389019012, -0.16769160330295563,0.15733961760997772,-0.051171790808439255,0.13822554051876068,-0.25397557020187378,0.43220961093902588,-0.085664831101894379,-0.10484648495912552,-0.12928631901741028,-0.16070513427257538,0.11230229586362839,0.049484305083751678, 
  /* [9][2][][] */ -0.048935819417238235,0.11432179808616638,-0.23918388783931732,-0.0089514134451746941,0.082140162587165833,0.3348233699798584,-0.13897699117660522,-0.059299670159816742,-0.18695671856403351,-0.27303016185760498,0.12905831634998322,-0.19227014482021332, -0.019356943666934967,0.15772238373756409,-0.18218700587749481,0.24972783029079437,-0.13140906393527985,0.57331913709640503,-0.10721440613269806,0.002224707743152976,0.10478478670120239,0.015141417272388935,-0.12989901006221771,0.067025028169155121, -0.12724842131137848,0.15230175852775574,0.087746337056159973,-0.053619630634784698,0.0003348060417920351,0.59075146913528442,-0.23506279289722443,0.08069147914648056,-0.13842751085758209,-0.044684413820505142,-0.1125219538807869,-0.10485538840293884, 
  /* [10][0][][] */ 0.071557782590389252,-0.0029771218542009592,-0.16707983613014221,0.15040698647499084,0.054269369691610336,-0.3250562846660614,0.055613461881875992,0.10575337707996368,0.051804635673761368,0.08613152801990509,0.12452971190214157,-0.020616082474589348, 0.073867745697498322,0.053153436630964279,0.03646286204457283,0.07746201753616333,-0.015418320894241333,-0.17004500329494476,0.1309225857257843,0.1141759529709816,0.020268231630325317,-0.090659201145172119,0.090744033455848694,-0.1500009149312973, 0.071096852421760559,0.11812573671340942,-0.14205756783485413,0.066547587513923645,-0.11442465335130692,-0.24357149004936218,0.091786317527294159,-0.11383912712335587,-0.064684115350246429,-0.097847431898117065,-0.026026511564850807,-0.023327302187681198, 
  /* [10][1][][] */ 0.12208423763513565,-0.082048848271369934,-0.068709798157215118,0.19523218274116516,-0.057931266725063324,-0.17743746936321259,-0.041939005255699158,0.17178298532962799,-0.18301357328891754,-0.11808182299137115,-0.14910933375358582,0.070558235049247742, -0.10343661904335022,0.14901101589202881,-0.19581177830696106,0.20102033019065857,0.079582326114177704,-0.0020951740443706512,-0.24585999548435211,0.15359537303447723,-0.16931994259357452,-0.15677903592586517,0.04408576712012291,0.028183257207274437, 0.03050910122692585,0.12572143971920013,-0.11504334956407547,0.094878323376178741,0.038439709693193436,-0.18941782414913177,-0.14790380001068115,0.070831574499607086,0.030929934233427048,-0.1927257627248764,0.048290275037288666,0.18430396914482117, 
  /* [10][2][][] */ 0.0048491368070244789,-0.09186079353094101,-0.23806676268577576,-0.039013296365737915,-0.053537048399448395,-0.20514309406280518,0.081490650773048401,-0.046257205307483673,-0.0041139312088489532,0.0099391788244247437,-0.07328014075756073,-0.0033152042888104916, -0.15756258368492126,-0.12571324408054352,-0.20365002751350403,0.14480732381343842,-0.11396437883377075,0.022414280101656914,-0.20125386118888855,0.014688160270452499,-0.11374414712190628,-0.083536654710769653,-0.27601540088653564,0.091199599206447601, -0.082337267696857452,-0.14039735496044159,-0.086641356348991394,-0.096316605806350708,-0.08700726181268692,-0.17644916474819183,0.042992465198040009,0.010985727421939373,0.12258104979991913,-0.10436102747917175,-0.26428249478340149,0.11959148943424225, 
  /* [11][0][][] */ -0.238054558634758,0.11866229027509689,0.17076931893825531,0.063966825604438782,0.24854178726673126,-0.10427462309598923,-0.12125828862190247,-0.043912552297115326,-0.07043302059173584,0.20437575876712799,0.13548435270786285,0.07048807293176651, -0.21605056524276733,0.071707852184772491,0.24873268604278564,-0.020127709954977036,0.28428056836128235,0.12977646291255951,-0.095933377742767334,-0.054928101599216461,0.11396808922290802,0.12975494563579559,-0.0035464814864099026,-0.11043185740709305, -0.15672977268695831,-0.013233423233032227,0.20296792685985565,-0.061796076595783234,-0.22498153150081635,0.097430519759654999,-0.15315227210521698,0.04024222120642662,0.15524719655513763,0.27102065086364746,0.016337096691131592,0.060767930001020432, 
  /* [11][1][][] */ -0.20597276091575623,0.12082583457231522,-0.016906941309571266,0.22489532828330994,0.24615295231342316,0.10111520439386368,-0.1690765768289566,-0.017400141805410385,0.018088150769472122,0.16495192050933838,-0.025712214410305023,0.044263005256652832, -0.11574642360210419,0.11799290031194687,0.13789179921150208,0.038076303899288177,-0.14198412001132965,-0.12890879809856415,-0.11926666647195816,-0.10194976627826691,-0.012726027518510818,0.10605695098638535,-0.091521203517913818,0.096267879009246826, -0.14791978895664215,-0.088366881012916565,0.24864114820957184,0.015888713300228119,-0.18907453119754791,-0.21060389280319214,-0.14796914160251617,-0.11059924215078354,0.15346257388591766,0.13058352470397949,-0.1072363406419754,-0.17406934499740601, 
  /* [11][2][][] */ -0.31997290253639221,0.14998938143253326,-0.070526860654354095,0.10291698575019836,-0.051958970725536346,0.12783578038215637,-0.23952007293701172,0.13419891893863678,-0.033518362790346146,0.11273784935474396,0.029074287042021751,-0.035001359879970551, -0.12055596709251404,-0.089306272566318512,0.11053375899791718,0.022444082424044609,-0.18993830680847168,0.056786380708217621,-0.085973963141441345,-0.25478771328926086,0.09474731981754303,0.15916146337985992,-0.010733942501246929,0.093552500009536743, 0.10775277763605118,-0.038637753576040268,0.21748264133930206,0.085863858461380005,-0.11326602846384048,0.058648455888032913,-0.47692504525184631,0.029422925785183907,0.060396675020456314,0.13021004199981689,0.023343369364738464,0.08755599707365036, 
};
const TfArray<4, int> tensor_dimension6 = { 4, { 12,3,3,12 } };
const ALIGN(16) float tensor_data7[8*3*3*12] = { 
  /* [0][0][][] */ 0.15146875381469727,0.052911058068275452,0.1602696031332016,-0.15595777332782745,0.13648580014705658,0.064899027347564697,-0.020703598856925964,-0.086792975664138794,-0.033197298645973206,-0.21716929972171783,0.11538609117269516,-0.20550110936164856, 0.15355348587036133,0.081502094864845276,0.045176640152931213,-0.10097163170576096,-0.062412839382886887,-0.090856321156024933,0.10434719175100327,-0.15093863010406494,0.10676602274179459,-0.10006105899810791,0.17808811366558075,0.10899188369512558, 0.13457944989204407,-0.049661315977573395,0.17766813933849335,-0.15847641229629517,-0.30602627992630005,0.038645163178443909,-0.002694456372410059,0.10483898222446442,0.1152600571513176,-0.37364304065704346,-0.12835009396076202,0.02802489697933197, 
  /* [0][1][][] */ 0.16061915457248688,-0.094523981213569641,0.00072586612077429891,0.14103740453720093,-0.21824073791503906,-0.041600540280342102,0.11372829228639603,0.054163709282875061,0.17401556670665741,0.17975181341171265,0.101303830742836,-0.19377818703651428, 0.26777583360671997,-0.19379238784313202,0.10489992052316666,0.25930657982826233,-0.23020429909229279,-0.15465880930423737,0.10166540741920471,0.029358206316828728,0.18207074701786041,0.021402560174465179,0.21411390602588654,-0.26857367157936096, 0.33686342835426331,-0.12047302722930908,0.015629695728421211,0.12156780809164047,-0.2274739146232605,-0.19089652597904205,-0.043156348168849945,-0.066254772245883942,0.34668993949890137,-0.014615767635405064,0.065775863826274872,-0.21190953254699707, 
  /* [0][2][][] */ -0.17062503099441528,-0.091091036796569824,-0.3394242525100708,0.023233354091644287,-0.10668975114822388,-0.0049676829949021339,-0.074350327253341675,0.036454711109399796,-0.10958109050989151,0.13385491073131561,-0.046338222920894623,-0.042273808270692825, -0.49227544665336609,0.030646681785583496,-0.1792844831943512,0.21360316872596741,0.17416808009147644,-0.098373085260391235,0.066716454923152924,-0.25131222605705261,-0.09497535228729248,0.02175307460129261,0.13359358906745911,-0.10782816261053085, -0.2932915985584259,-0.13983604311943054,-0.46221783757209778,-0.098469145596027374,-0.31325921416282654,-0.12877221405506134,-0.099493116140365601,-0.094813920557498932,-0.15461081266403198,-0.12585905194282532,0.14468063414096832,-0.16703619062900543, 
  /* [1][0][][] */ 0.24827675521373749,-0.073492676019668579,-0.24019022285938263,0.10654492676258087,0.013833284378051758,0.1347121000289917,0.034093905240297318,0.11153214424848557,0.15838137269020081,0.039777722209692001,-0.081004075706005096,0.12122604995965958, 0.10460856556892395,-0.059357281774282455,0.034212019294500351,0.097718596458435059,0.099637717008590698,0.056989572942256927,0.037881635129451752,-0.098818063735961914,-0.093659788370132446,-0.04714231938123703,-0.14175818860530853,-0.070770494639873505, -0.068772211670875549,0.18237137794494629,-0.16850441694259644,0.07003418356180191,0.18784716725349426,0.16221286356449127,-0.022101074457168579,0.064252018928527832,-0.18793098628520966,0.19221051037311554,0.025903413072228432,0.048425264656543732, 
  /* [1][1][][] */ -0.046278063207864761,0.16863243281841278,0.045414961874485016,0.067263990640640259,0.11558238416910172,-0.13917893171310425,-0.16017189621925354,-0.074007146060466766,0.2498207688331604,-0.074322782456874847,-0.13021470606327057,0.050155315548181534, -0.036305978894233704,0.23548564314842224,-0.13036221265792847,-0.091400615870952606,0.10557345300912857,0.0043810275383293629,-0.090588271617889404,0.16942337155342102,0.045020408928394318,-0.057575318962335587,-0.033015035092830658,0.13418093323707581, 0.080857910215854645,0.25479990243911743,-0.0057521280832588673,-0.10096040368080139,0.14865627884864807,-0.15454618632793427,0.19463631510734558,0.2320667952299118,-0.061706811189651489,0.031603544950485229,0.01665755920112133,0.13770535588264465, 
  /* [1][2][][] */ 0.04638976976275444,0.21887028217315674,-0.011308443732559681,-0.0053817331790924072,0.084707163274288177,0.0052548982203006744,0.13189764320850372,0.3511945903301239,0.25010210275650024,-0.08827180415391922,-0.0070607266388833523,0.2217557281255722, 0.0035093475598841906,0.24494639039039612,-0.15896070003509521,0.19446872174739838,0.13687942922115326,-0.025845678523182869,0.065332651138305664,0.11222775280475616,0.1360948234796524,-0.14261685311794281,0.18390721082687378,-0.017478711903095245, 0.23743003606796265,0.30722865462303162,0.026273094117641449,0.10280272364616394,0.19180695712566376,-0.17626222968101501,0.11184656620025635,0.14212213456630707,0.18343061208724976,0.058157533407211304,-0.10832864791154861,-0.0465741828083992, 
  /* [2][0][][] */ -0.17589689791202545,-0.0057123880833387375,0.038388021290302277,0.2013719230890274,0.24144835770130157,0.091165326535701752,-0.028166566044092178,0.23560452461242676,0.13794438540935516,-0.15321706235408783,0.10348895937204361,0.16526737809181213, -0.19052344560623169,0.011121315881609917,-0.30191344022750854,-0.0040161292999982834,0.079464137554168701,0.15481649339199066,0.13013425469398499,0.15705695748329163,0.00098806165624409914,0.098042421042919159,-0.097158201038837433,0.1219322681427002, 0.083747647702693939,0.17250557243824005,-0.10839147120714188,-0.12473060190677643,0.29149401187896729,0.063053078949451447,-0.04539601132273674,0.11870225518941879,0.14255926012992859,-0.013900287449359894,0.06543237715959549,0.27530112862586975, 
  /* [2][1][][] */ -0.2109571248292923,0.32730019092559814,-0.12130945920944214,0.14239419996738434,0.14650870859622955,-0.0082284007221460342,-0.17565923929214478,0.24625714123249054,-0.097639329731464386,0.11567418277263641,-0.2399212121963501,0.2518865168094635, -0.058199033141136169,0.13713908195495605,-0.081336207687854767,-0.15052777528762817,0.15766850113868713,0.0089623527601361275,-0.026583177968859673,0.18795421719551086,0.17779208719730377,-0.087720349431037903,-0.026510635390877724,0.22952663898468018, 0.034485522657632828,0.16846880316734314,-0.083327591419219971,0.089987173676490784,0.21810729801654816,0.20195998251438141,0.091757632791996002,0.24941091239452362,-0.053265240043401718,-0.15485809743404388,-0.21943587064743042,0.199867844581604, 
  /* [2][2][][] */ 0.25977179408073425,0.043965853750705719,0.045981701463460922,0.070074431598186493,0.19847410917282104,0.12421306967735291,-0.10902534425258636,0.063447833061218262,-0.17152063548564911,0.063687838613986969,-0.016953697428107262,0.16245336830615997, 0.12153509259223938,0.27386137843132019,-0.080846205353736877,0.068016268312931061,0.21710017323493958,-0.15606112778186798,0.036429677158594131,0.31653520464897156,-0.069007121026515961,0.19770686328411102,0.1436242014169693,0.045603733509778976, 0.079630404710769653,0.022908296436071396,-0.043866757303476334,-0.10314834117889404,0.20685236155986786,0.071132823824882507,-0.025260547176003456,0.066624879837036133,0.18076443672180176,-0.16390132904052734,-0.020238667726516724,-0.11885131150484085, 
  /* [3][0][][] */ 0.061296246945858002,-0.22981230914592743,0.13125500082969666,-0.058120589703321457,-0.28109219670295715,-0.047828014940023422,-0.30639410018920898,-0.15734906494617462,-0.16330474615097046,-0.13528476655483246,-0.038398299366235733,-0.27223384380340576, 0.15225780010223389,0.0027973758988082409,-0.038291100412607193,-0.28153723478317261,0.14067773520946503,-0.048737455159425735,0.057662900537252426,-0.20763926208019257,-0.13444653153419495,-0.11135169863700867,0.026571614667773247,-0.21156856417655945, 0.1317865401506424,-0.17066951096057892,0.20770962536334991,-0.039559926837682724,-0.11348538100719452,-0.15356984734535217,-0.12707264721393585,-0.387931227684021,-0.025568541139364243,0.17353267967700958,-0.084405012428760529,-0.29704359173774719, 
  /* [3][1][][] */ 0.13767232000827789,-0.049460098147392273,-0.070135109126567841,-0.2939225435256958,-0.18928608298301697,-0.11099982261657715,0.29209193587303162,-0.32352301478385925,0.18171137571334839,-0.079398281872272491,-0.20501495897769928,-0.32269307971000671, 0.083521768450737,-0.067751117050647736,0.0025816862471401691,-0.20339325070381165,0.12179107964038849,0.17487648129463196,0.22423112392425537,-0.027971362695097923,0.083087682723999023,-0.019429894164204597,-0.059485778212547302,-0.18633076548576355, -0.0074309706687927246,0.098827160894870758,0.21419276297092438,0.018722623586654663,0.03326074406504631,0.14603595435619354,0.056425668299198151,-0.15515762567520142,0.21396860480308533,0.20414377748966217,0.13206040859222412,-0.056639667600393295, 
  /* [3][2][][] */ 0.17257991433143616,-0.061448317021131516,-0.091458611190319061,0.15918929874897003,-0.094715334475040436,0.042802110314369202,-0.17019535601139069,-0.19369985163211823,-0.1496683806180954,-0.066304698586463928,-0.021214086562395096,-0.17290718853473663, 0.036168459802865982,-0.14514388144016266,0.10623088479042053,0.16364480555057526,0.26572540402412415,0.14148084819316864,0.20875459909439087,-0.14587266743183136,0.11392311006784439,-0.038700640201568604,0.084931351244449615,-0.1781419962644577, -0.06211426854133606,0.025752438232302666,-0.086413174867630005,0.13979889452457428,0.059620130807161331,0.10156089812517166,-0.062004007399082184,-0.13429662585258484,-0.061283379793167114,-0.23130230605602264,-0.017270321026444435,-0.019618907943367958, 
  /* [4][0][][] */ 0.15001943707466125,0.028927385807037354,-0.34966468811035156,0.019861729815602303,0.15829332172870636,-0.0032946702558547258,0.19611209630966187,-0.017127176746726036,0.10610427707433701,-0.09344886988401413,-0.17311303317546844,0.1390175074338913, 0.072005905210971832,0.20616874098777771,-0.011283759027719498,-0.094198040664196014,0.20982855558395386,-0.067618660628795624,0.060256656259298325,0.12868587672710419,-0.14612127840518951,-0.060857340693473816,-0.057988084852695465,-0.05968654528260231, 0.17380836606025696,-0.044456049799919128,-0.18658705055713654,0.085020050406455994,-0.044317733496427536,-0.097072333097457886,0.11667320132255554,0.25676718354225159,-0.15372525155544281,-0.024317264556884766,0.015212238766252995,-0.0063384897075593472, 
  /* [4][1][][] */ 0.024333544075489044,0.0018951796228066087,-0.16718299686908722,-0.10392967611551285,0.070281222462654114,0.030215606093406677,-0.16727049648761749,0.16875508427619934,0.21690735220909119,0.010691195726394653,-0.18133719265460968,-0.019205329939723015, 0.11106850206851959,0.29261705279350281,0.019519543275237083,-0.19425174593925476,0.041548416018486023,-0.011167403310537338,0.0013495282037183642,0.292289137840271,0.12466301023960114,-0.063915811479091644,0.057069025933742523,0.016916444525122643, 0.11865171045064926,0.046541046351194382,-0.09257090836763382,0.043853938579559326,0.1882021427154541,-0.17229624092578888,-0.080921046435832977,0.25762781500816345,0.031174937263131142,0.084230273962020874,-0.22593612968921661,0.13902932405471802, 
  /* [4][2][][] */ 0.031837005168199539,0.14629051089286804,-0.039342798292636871,-0.080658510327339172,0.19548295438289642,-0.1488039493560791,-0.18290811777114868,0.30693981051445007,0.1623939573764801,0.04060392826795578,0.025537660345435143,0.096110016107559204, 0.32195019721984863,0.15550793707370758,-0.32929423451423645,-0.024595541879534721,0.0031237793155014515,-0.13060997426509857,0.046671517193317413,0.25432920455932617,0.077008180320262909,-0.29670590162277222,0.15425443649291992,0.0064818821847438812, 0.088682271540164948,-0.027820903807878494,-0.34433507919311523,-0.0050355084240436554,0.1850186288356781,-0.028607157990336418,0.28368383646011353,0.036670301109552383,-0.034235961735248566,0.16702781617641449,0.071930564939975739,-0.019986839964985847, 
  /* [5][0][][] */ 0.11685283482074738,-0.1790698766708374,-0.14899446070194244,0.024881972000002861,0.041796408593654633,0.067794017493724823,-0.023802690207958221,0.1183926910161972,0.11954269558191299,0.2475162148475647,-0.074510850012302399,-0.21946640312671661, 0.20687310397624969,0.16954649984836578,0.16614097356796265,-0.19457012414932251,-0.050050772726535797,-0.04759620875120163,-0.10336842387914658,-0.086952380836009979,0.1257070004940033,0.21571654081344604,0.082952238619327545,-0.098440848290920258, 0.37468713521957397,0.087153732776641846,-0.1403130441904068,-0.11325760930776596,0.052600618451833725,0.12628144025802612,0.048540316522121429,-0.062141604721546173,0.07636743038892746,0.20187106728553772,-0.035445816814899445,-0.22362023591995239, 
  /* [5][1][][] */ -0.064229734241962433,-0.17084610462188721,0.13252905011177063,-0.091629199683666229,-0.067152261734008789,0.034700535237789154,-0.22235029935836792,0.066007770597934723,0.03018651157617569,-0.14601966738700867,-0.017200946807861328,-0.12876048684120178, 0.096051886677742004,-0.16510450839996338,-0.043879978358745575,0.029659828171133995,0.21563601493835449,-0.068596914410591125,-0.093264423310756683,-0.31105950474739075,-0.081434130668640137,0.23911952972412109,-0.15526917576789856,-0.0020425817929208279, 0.30955836176872253,0.070693626999855042,-0.017503306269645691,-0.118099145591259,0.11266693472862244,0.053276807069778442,-0.1642746776342392,-0.18373002111911774,0.10073612630367279,-0.095087550580501556,-0.063472479581832886,-0.10390057414770126, 
  /* [5][2][][] */ 0.10989584028720856,0.066470645368099213,0.05681278184056282,0.10150260478258133,-0.12803028523921967,0.088910244405269623,-0.02022184431552887,-0.18776087462902069,0.031615383923053741,-0.080746226012706757,-0.026645822450518608,-0.056391440331935883, 0.005257525946944952,-0.046488303691148758,-0.10053824633359909,-0.10144419968128204,0.22759486734867096,0.037959620356559753,0.26122823357582092,-0.25623252987861633,0.18278543651103973,0.23385998606681824,0.24453158676624298,0.19379135966300964, 0.17429159581661224,-0.17499548196792603,-0.036260019987821579,0.2366439551115036,-0.12270862609148026,0.089803367853164673,0.10605571419000626,0.067430697381496429,0.013435006141662598,-0.11730722337961197,0.11295527964830399,0.15232020616531372, 
  /* [6][0][][] */ -0.094167590141296387,-0.38986968994140625,-0.21797212958335876,0.089158840477466583,-0.18645660579204559,0.046630844473838806,-0.050153270363807678,-0.16721980273723602,-0.17173458635807037,0.32904934883117676,0.042981136590242386,-0.3458636999130249, -0.4076305627822876,0.03770812600851059,-0.075240328907966614,0.1052229255437851,0.18382176756858826,0.11546672880649567,-0.10546340048313141,0.04125598818063736,-0.064199566841125488,0.33175069093704224,-0.0046771937049925327,0.028788801282644272, -0.31061410903930664,0.049266178160905838,-0.078262932598590851,-0.14721469581127167,0.22876331210136414,-0.23590661585330963,0.20187054574489594,-0.15203487873077393,0.12848784029483795,0.14765128493309021,0.0034818653948605061,0.091750398278236389, 
  /* [6][1][][] */ 0.069613263010978699,-0.15147773921489716,-0.1601741760969162,-0.087518401443958282,-0.10698758810758591,0.14402647316455841,-0.11541013419628143,-0.2820715606212616,-0.054002638906240463,0.25156489014625549,-0.2299763560295105,-0.37953656911849976, -0.15401199460029602,0.041314762085676193,-0.15345099568367004,0.11849648505449295,0.21423417329788208,0.063510231673717499,-0.13976225256919861,-0.13227225840091705,-0.088355116546154022,0.18897230923175812,-0.19575582444667816,0.091216757893562317, -0.27109736204147339,-0.025447139516472816,-0.089138999581336975,-0.0403921939432621,0.05006849393248558,-0.074496001005172729,0.32303705811500549,-0.12678633630275726,-0.081082232296466827,0.21765923500061035,0.11608155816793442,0.22279053926467896, 
  /* [6][2][][] */ 0.014139710925519466,0.14535778760910034,0.24563995003700256,-0.0063854111358523369,-0.013533848337829113,-0.07911209762096405,-0.1306634247303009,-0.17359402775764465,-0.03966231644153595,0.15054674446582794,0.12775592505931854,0.10446705669164658, 0.17951574921607971,-0.17008022964000702,0.022466359660029411,-0.1320393830537796,-0.04591827467083931,-0.1237068846821785,-0.24288482964038849,-0.048052720725536346,0.22274142503738403,0.011632556095719337,-0.066373169422149658,-0.14627036452293396, 0.13674305379390717,0.27047482132911682,0.25434470176696777,0.068201377987861633,0.13009423017501831,0.044925898313522339,0.15384767949581146,-0.044339690357446671,-0.15345235168933868,0.066761985421180725,-0.13772071897983551,0.004022838082164526, 
  /* [7][0][][] */ -0.14093455672264099,-0.012479080818593502,-0.097454965114593506,-0.10546086728572845,-0.20450037717819214,0.030412813648581505,-0.14835326373577118,0.12130490690469742,-0.20852534472942352,0.4652361273765564,-0.20376624166965485,-0.080209173262119293, -0.047048766165971756,-0.20129801332950592,0.069188937544822693,-0.11966767162084579,0.067139551043510437,-0.03532123938202858,0.049152374267578125,-0.15991421043872833,0.063787087798118591,0.048395182937383652,0.090888582170009613,0.0071323830634355545, 0.12756747007369995,0.14877256751060486,-0.14663898944854736,0.054636131972074509,0.11849277466535568,-0.16524480283260345,0.038475044071674347,-0.12173798680305481,0.079288564622402191,0.064782716333866119,0.17110592126846313,0.048332035541534424, 
  /* [7][1][][] */ 0.15238800644874573,0.17957362532615662,0.10158554464578629,-0.28764802217483521,0.17911703884601593,0.11014708131551743,0.021206412464380264,0.040772169828414917,0.012846820987761021,0.087850689888000488,-0.12746243178844452,-0.2121431976556778, -0.024742668494582176,-0.12416544556617737,-0.062782667577266693,-0.063805676996707916,0.30405169725418091,-0.051063962280750275,0.39058327674865723,0.049219485372304916,-0.18269944190979004,0.17228031158447266,-0.14769358932971954,-0.023981420323252678, 0.031763218343257904,-0.085918642580509186,-0.13243277370929718,-0.07258199155330658,0.0036151283420622349,0.11016059666872025,0.070946104824542999,-0.28645709156990051,0.19159622490406036,0.28483760356903076,0.070445843040943146,-0.094236001372337341, 
  /* [7][2][][] */ 0.0040397332049906254,-0.016242098063230515,0.16505897045135498,-0.043263576924800873,-0.11691086739301682,-0.10863618552684784,-0.16425733268260956,-0.091134116053581238,-0.1636035144329071,0.029487870633602142,-0.18274042010307312,-0.13033749163150787, -0.1567341536283493,0.14938513934612274,-0.092850625514984131,0.059928439557552338,0.34024611115455627,0.06812632828950882,0.29714959859848022,-0.010694744065403938,-0.14779475331306458,0.37046778202056885,0.14632298052310944,0.23969994485378265, -0.32621872425079346,-0.2208239734172821,0.078195743262767792,-0.055929578840732574,0.0036184971686452627,-0.2194267213344574,-0.016229011118412018,-0.21765385568141937,-0.18306411802768707,0.15608561038970947,0.13230247795581818,0.095034517347812653, 
};
const TfArray<4, int> tensor_dimension7 = { 4, { 8,3,3,12 } };
const ALIGN(16) float tensor_data8[8*3*3*8] = { 
  /* [0][0][][] */ 0.03814774751663208,-0.38560780882835388,-0.010740128345787525,0.10710770636796951,-0.31935986876487732,0.26988053321838379,-0.14992262423038483,-0.13332156836986542, -0.062888734042644501,-0.21260543167591095,-0.27108284831047058,-0.1215856522321701,-0.11946640908718109,0.14091135561466217,0.17080248892307281,-0.23729901015758514, 0.19863136112689972,0.13694362342357635,-0.21599186956882477,-0.052255690097808838,-0.20781987905502319,-0.023175576701760292,-0.16456164419651031,0.15586504340171814, 
  /* [0][1][][] */ 0.33359932899475098,0.071206413209438324,0.053692076355218887,-0.18803700804710388,-0.24859015643596649,0.027328886091709137,0.14183659851551056,0.17118085920810699, 0.18749672174453735,0.21772068738937378,-0.052331570535898209,-0.052074968814849854,0.19993391633033752,-0.15219020843505859,0.088041298091411591,-0.16082952916622162, 0.2048126608133316,0.18310394883155823,-0.22183054685592651,-0.046118531376123428,-0.15009519457817078,-0.15038309991359711,0.1759566068649292,0.06242448091506958, 
  /* [0][2][][] */ 0.18906612694263458,-0.13533531129360199,-0.18571957945823669,-0.070208244025707245,-0.20551158487796783,0.19407530128955841,0.073848515748977661,0.26044338941574097, -0.021976979449391365,-0.031901504844427109,-0.26085376739501953,-0.28152066469192505,0.065249413251876831,-0.13987483084201813,0.10723204165697098,0.10769312828779221, -0.043733596801757812,-0.079244039952754974,0.12594980001449585,-0.054377630352973938,-0.2465219646692276,0.17382612824440002,0.28972512483596802,0.31768608093261719, 
  /* [1][0][][] */ -0.21958312392234802,-0.14432843029499054,-0.15039113163948059,-0.226016566157341,-0.080314375460147858,0.073682025074958801,0.39052802324295044,0.0549158975481987, -0.15171615779399872,0.12766897678375244,-0.012393166311085224,0.093213900923728943,-0.27831417322158813,0.25609666109085083,0.26482641696929932,0.23038904368877411, 0.099864594638347626,-0.096810236573219299,-0.034842908382415771,0.12924440205097198,-0.28107202053070068,-0.0059053255245089531,0.097282230854034424,0.11960505694150925, 
  /* [1][1][][] */ 0.028858749195933342,0.17450395226478577,-0.063606619834899902,0.061093620955944061,0.10103754699230194,-0.077238880097866058,0.16294705867767334,0.17899362742900848, 0.15124544501304626,0.1191830039024353,0.1074851006269455,0.069536983966827393,0.14217031002044678,0.25169748067855835,0.27887269854545593,0.088593073189258575, 0.02522282674908638,0.12097795307636261,-0.066450543701648712,0.031370516866445541,-0.18716618418693542,0.076192647218704224,0.0063751158304512501,-0.16704073548316956, 
  /* [1][2][][] */ -0.18404124677181244,0.044020418077707291,-0.081063374876976013,0.059733361005783081,-0.026775132864713669,0.27676481008529663,0.039446916431188583,0.19432482123374939, -0.12619413435459137,-0.06407444179058075,0.028792751953005791,0.049219891428947449,-0.011025481857359409,0.24632515013217926,-0.089948944747447968,0.21520756185054779, -0.13719025254249573,-0.018991336226463318,0.023555820807814598,-0.02159387618303299,0.025662189349532127,0.31181898713111877,-0.085961863398551941,-0.17771360278129578, 
  /* [2][0][][] */ 0.0054566874168813229,0.066616587340831757,-0.28545564413070679,0.1550423800945282,-0.11635319888591766,0.097798243165016174,-0.016832290217280388,-0.21908010542392731, 0.10875870287418365,0.071989104151725769,-0.038666002452373505,-0.16424642503261566,0.14703312516212463,-0.14209574460983276,-0.016703007742762566,0.097268290817737579, -0.024375984445214272,-0.016586719080805779,0.25376874208450317,-0.070003874599933624,0.039834063500165939,0.1995517909526825,-0.017518460750579834,0.10082406550645828, 
  /* [2][1][][] */ -0.024209843948483467,0.1031886413693428,-0.029352804645895958,0.059913761913776398,-0.088401935994625092,-0.051484648138284683,0.032822452485561371,-0.23373511433601379, -0.0812816321849823,0.27025604248046875,-0.11159543693065643,0.028724433854222298,0.23184923827648163,-0.1830403208732605,0.22024230659008026,0.062627129256725311, -0.044310666620731354,0.2213170975446701,0.30377092957496643,-0.11109918355941772,-0.038243155926465988,-0.094886071979999542,-0.16471183300018311,0.2091309130191803, 
  /* [2][2][][] */ -0.011721935123205185,0.12640725076198578,0.25889790058135986,-0.17790274322032928,-0.064393110573291779,0.037039302289485931,-0.01839236356317997,0.019978294149041176, 0.082981809973716736,0.10818873345851898,0.37619242072105408,-0.16727314889431,0.36168166995048523,0.01864682137966156,0.043884966522455215,0.12110520899295807, -0.1081414595246315,0.19317874312400818,0.023512031883001328,-0.2295529842376709,0.10611636936664581,-0.18615274131298065,0.17735646665096283,-0.040184918791055679, 
  /* [3][0][][] */ -0.19198350608348846,0.20830437541007996,-0.041056487709283829,-0.068294711410999298,0.045644592493772507,-0.12278603762388229,0.034009672701358795,-0.11203282326459885, 0.060604948550462723,-0.026426158845424652,0.31331551074981689,-0.005658778827637434,0.003991417121142149,0.21710498631000519,-0.15840202569961548,0.065159164369106293, 0.16150446236133575,-0.10160123556852341,0.20660391449928284,-0.077836506068706512,0.18295979499816895,0.093056440353393555,-0.033341359347105026,0.14306122064590454, 
  /* [3][1][][] */ -0.15784899890422821,0.13466079533100128,0.28010573983192444,-0.19587767124176025,0.14441110193729401,-0.098511859774589539,0.047374803572893143,-0.12861791253089905, -0.0188320092856884,0.1675514280796051,0.1522662490606308,0.099858090281486511,0.19309060275554657,-0.019452754408121109,-0.09176202118396759,0.2418273538351059, -0.10656845569610596,0.1382482647895813,0.098379403352737427,0.062133718281984329,0.0019973115995526314,-0.19929185509681702,-0.01167979184538126,0.036099236458539963, 
  /* [3][2][][] */ 0.083813853561878204,0.086838014423847198,0.070178143680095673,-0.35665452480316162,0.16943386197090149,0.026888521388173103,-0.06814846396446228,-0.21544057130813599, -0.00011093199282186106,-0.018541924655437469,0.031272541731595993,-0.073007687926292419,0.11375485360622406,0.25380274653434753,0.15522244572639465,0.062302783131599426, -0.15606434643268585,0.086393974721431732,-0.078190051019191742,-0.044484429061412811,0.20854023098945618,0.18687056005001068,0.063104748725891113,0.11922480911016464, 
  /* [4][0][][] */ -0.087524622678756714,0.19400644302368164,0.16562390327453613,-0.18131451308727264,0.16901311278343201,0.11122022569179535,-0.28492781519889832,-0.30835467576980591, -0.0066454247571527958,0.22649720311164856,0.20305956900119781,-0.010634896345436573,0.26941272616386414,0.14053516089916229,-0.13646456599235535,0.053318556398153305, 0.084561266005039215,0.20636133849620819,-0.0035106691066175699,-0.43861356377601624,-0.084774643182754517,0.0057596401311457157,-0.30895194411277771,-0.025368379428982735, 
  /* [4][1][][] */ 0.1515955924987793,-0.13181853294372559,0.15244106948375702,-0.27244269847869873,0.1061316654086113,-0.1795365959405899,-0.10567883402109146,-0.016293348744511604, -0.055474225431680679,-0.021013084799051285,-0.22857736051082611,0.12539651989936829,-0.18100783228874207,-0.085385680198669434,-0.25035768747329712,-0.020510319620370865, -0.14288784563541412,0.036471448838710785,-0.062402516603469849,-0.42659702897071838,0.18038086593151093,-0.069464504718780518,-0.10915122181177139,0.21509936451911926, 
  /* [4][2][][] */ -0.13835287094116211,0.14358507096767426,-0.17804622650146484,-0.27538451552391052,0.077767431735992432,-0.089744545519351959,-0.27593544125556946,0.14650940895080566, 0.13555938005447388,-0.19599258899688721,0.045043125748634338,-0.022123537957668304,0.064158238470554352,-0.10693511366844177,0.23594716191291809,-0.078501693904399872, 0.054573856294155121,-0.022080091759562492,0.18427623808383942,-0.14640291035175323,0.17141976952552795,-0.020786948502063751,0.19710314273834229,-0.043545130640268326, 
  /* [5][0][][] */ -0.15215376019477844,-0.13367936015129089,-0.10227178037166595,-0.18215140700340271,-0.14731582999229431,-0.085768654942512512,0.29188650846481323,0.039675194770097733, -0.0027364501729607582,-0.045911237597465515,0.0074651679024100304,-0.31500822305679321,0.22860464453697205,-0.41971209645271301,0.15367093682289124,-0.22615155577659607, 0.13691599667072296,0.085666410624980927,0.0093908114358782768,-0.18899701535701752,0.0091269733384251595,-0.089618794620037079,0.032561562955379486,0.23594897985458374, 
  /* [5][1][][] */ -0.10748428106307983,-0.14056292176246643,0.042607963085174561,-0.12772366404533386,-0.17013892531394958,-0.037207640707492828,0.21899428963661194,0.1772104799747467, -0.23374246060848236,0.11928319185972214,0.16642126441001892,0.081399738788604736,-0.12338131666183472,-0.17458327114582062,-0.061455637216567993,0.10696729272603989, 0.021542314440011978,-0.046906579285860062,0.15455958247184753,0.035271115601062775,0.24703007936477661,0.18860451877117157,-0.33735361695289612,0.12262165546417236, 
  /* [5][2][][] */ 0.14668163657188416,-0.10767973959445953,0.11384469270706177,-0.050807218998670578,-0.13957960903644562,0.17601104080677032,0.1294274777173996,0.3368472158908844, 0.20710979402065277,0.27687817811965942,-0.049561507999897003,-0.29654631018638611,0.24014741182327271,0.16397520899772644,-0.39560613036155701,0.016099991276860237, 0.23079290986061096,-0.17646618187427521,-0.024856777861714363,-0.20994719862937927,0.17039626836776733,-0.052423913031816483,-0.14930072426795959,0.1917584240436554, 
  /* [6][0][][] */ -0.27242356538772583,0.074423670768737793,0.10445238649845123,-0.04772074893116951,0.031941600143909454,0.12204421311616898,0.14583307504653931,-0.14157837629318237, -0.42673012614250183,0.086948156356811523,0.13589625060558319,-0.14780455827713013,0.065032303333282471,-0.1705024242401123,-0.17416633665561676,-0.51688957214355469, -0.38302996754646301,-0.05254841223359108,0.10157664865255356,0.054303377866744995,-0.025810834020376205,-0.146994948387146,-0.28164029121398926,-0.38383865356445312, 
  /* [6][1][][] */ 0.14285305142402649,-0.1342407763004303,-0.13282559812068939,-0.062470633536577225,-0.15498664975166321,-0.051604237407445908,0.35629415512084961,-0.046844545751810074, 0.25700253248214722,-0.20561833679676056,-0.15271134674549103,0.27211743593215942,-0.50408291816711426,-0.14474621415138245,-0.088150821626186371,0.032564938068389893, -0.057142104953527451,-0.24344353377819061,-0.2513134777545929,0.38888600468635559,-0.40052244067192078,0.1466340571641922,-0.0033202003687620163,0.25057926774024963, 
  /* [6][2][][] */ 0.24362634122371674,0.050969000905752182,-0.2483375072479248,-0.10171199589967728,0.22771155834197998,0.23796170949935913,0.31689399480819702,0.1567234992980957, 0.32036879658699036,0.040933597832918167,-0.19674777984619141,-0.17402327060699463,0.15275532007217407,0.1906922310590744,-0.25074812769889832,-0.051757268607616425, 0.17623186111450195,0.37022066116333008,0.10727575421333313,-0.09779801219701767,-0.028442753478884697,0.23724144697189331,0.16786457598209381,0.33577284216880798, 
  /* [7][0][][] */ -0.069860287010669708,0.029848719015717506,0.17910701036453247,-0.020977756008505821,0.24191181361675262,-0.0091922171413898468,-0.34752532839775085,0.16959458589553833, 0.26718667149543762,-0.14670544862747192,-0.19691230356693268,0.072298794984817505,-0.057304631918668747,-0.27703121304512024,-0.47638744115829468,-0.015236001461744308, 0.21892127394676208,-0.22071073949337006,-0.14401033520698547,0.052868112921714783,0.06388547271490097,0.12820151448249817,-0.16560578346252441,-0.23256905376911163, 
  /* [7][1][][] */ -0.01008201576769352,0.062054529786109924,0.054719783365726471,-0.21775563061237335,0.15911908447742462,-0.094482101500034332,0.11588761210441589,-0.018918491899967194, 0.12896765768527985,-0.38918545842170715,-0.045652735978364944,-0.067254222929477692,-0.14295950531959534,-0.069240495562553406,0.35071656107902527,0.22680635750293732, -0.14606004953384399,-0.32969379425048828,-0.024686170741915703,-0.16202902793884277,-0.28217518329620361,-0.099449127912521362,0.3517453670501709,0.14667502045631409, 
  /* [7][2][][] */ 0.16347736120223999,-0.35580509901046753,-0.27506184577941895,-0.17077866196632385,-0.35144275426864624,0.17823825776576996,0.20695951581001282,-0.063017688691616058, -0.21609875559806824,-0.25337034463882446,-0.34469929337501526,-0.17239916324615479,-0.059688754379749298,-0.20739254355430603,0.28349876403808594,0.14534552395343781, 0.19873307645320892,-0.034156464040279388,0.031123172491788864,0.032937552779912949,-0.029676757752895355,0.20946018397808075,0.25541111826896667,0.049579460173845291, 
};
const TfArray<4, int> tensor_dimension8 = { 4, { 8,3,3,8 } };
const ALIGN(8) int32_t tensor_data9[2] = { -1, 288, };
const TfArray<1, int> tensor_dimension9 = { 1, { 2 } };
const ALIGN(8) float tensor_data10[3] = { -0.11500528454780579, 0.14424857497215271, -0.033705290406942368, };
const TfArray<1, int> tensor_dimension10 = { 1, { 3 } };
const ALIGN(16) float tensor_data11[3*288] = { 
  -0.11493239551782608, -0.093100041151046753, -0.023898638784885406, -0.049516577273607254, -0.18329407274723053, -0.00025728106265887618, -0.071147501468658447, -0.042902220040559769, -0.061993654817342758, 0.029714250937104225, 0.12752416729927063, -0.038462132215499878, -0.021885856986045837, -0.05416763573884964, 0.0045993607491254807, -0.12531982362270355, -0.16478335857391357, -0.19857974350452423, 0.15603408217430115, 0.14908508956432343, 0.050510212779045105, -0.037881497293710709, -0.1503661721944809, -0.35356545448303223, -0.23600634932518005, -0.10487160831689835, 0.18354684114456177, -0.050546895712614059, 0.23662987351417542, 0.07624228298664093, -0.20301349461078644, -0.4866606593132019, -0.32409235835075378, -0.11793413013219833, 0.058107234537601471, 0.066829703748226166, 0.23986172676086426, 0.062453087419271469, -0.28777274489402771, -0.37058499455451965, -0.15875676274299622, -0.10028910636901855, 0.10749426484107971, 0.028210733085870743, 0.018140256404876709, -0.0077655529603362083, -0.17365609109401703, -0.49045825004577637, -0.098438560962677002, 0.026240326464176178, -0.052871700376272202, -0.10170357674360275, -0.13596311211585999, 0.13561862707138062, 0.27272909879684448, -0.0038828416727483273, -0.031413227319717407, -0.12781199812889099, 0.046450525522232056, 0.081653319299221039, 0.12053150683641434, -0.0067485920153558254, 0.26173055171966553, -0.10296010226011276, -0.097699448466300964, 0.014955563470721245, 0.027976613491773605, -0.0030198185704648495, -0.04557766392827034, -0.084931567311286926, 0.11212193220853806, -0.058764621615409851, -0.037162840366363525, -0.11077998578548431, 0.012984221801161766, 0.08246903121471405, 0.080618686974048615, -0.094453178346157074, 0.3445187509059906, -0.16306611895561218, -0.0070919306017458439, 0.11440145224332809, 0.079818226397037506, -0.035541802644729614, -0.00055263249669224024, -0.065052099525928497, 0.21657119691371918, 0.052700668573379517, -0.11484795063734055, -0.022593643516302109, -0.00085352826863527298, 0.088747948408126831, 0.11226755380630493, -0.088065557181835175, 0.34410792589187622, 0.070141442120075226, -0.0029781302437186241, -0.072939477860927582, 0.10278727859258652, -0.049263507127761841, 0.11343186348676682, 0.0045526390895247459, 0.16214440762996674, 0.1377604752779007, -0.10108949989080429, -0.12795485556125641, -0.04255376011133194, 0.22097545862197876, 0.14255474507808685, 0.14095111191272736, 0.09971330314874649, 0.02031722292304039, 0.0036991885863244534, -0.13305673003196716, 0.096834398806095123, 0.052867818623781204, -0.010592195205390453, 0.11805744469165802, 0.13226497173309326, -0.026017647236585617, -0.11268685013055801, -0.027223106473684311, 0.21783031523227692, -0.0094873150810599327, 0.030157025903463364, 0.069162741303443909, -0.16001167893409729, 0.2262609452009201, -0.087372817099094391, -0.10693042725324631, 0.22387942671775818, 0.042739242315292358, 0.071387410163879395, -0.076029315590858459, 0.053169973194599152, -0.086572542786598206, -0.032197378575801849, -0.11025767773389816, 0.20018184185028076, 0.082678988575935364, 0.12919257581233978, -0.0099076172336935997, -0.041248690336942673, 0.020226394757628441, 0.04545825719833374, -0.16139079630374908, 0.14999772608280182, -0.11373911052942276, 0.01198007445782423, 0.13195961713790894, -0.2501119077205658, -0.03446483239531517, -0.066631317138671875, -0.28118908405303955, -0.026907527819275856, 0.13446840643882751, 0.045293048024177551, 0.042688906192779541, -0.15803255140781403, 0.037170156836509705, -0.046236209571361542, -0.18843145668506622, 0.12241249531507492, 0.14963673055171967, 0.071606561541557312, 0.21059475839138031, -0.23377880454063416, -0.10430259257555008, -0.14201800525188446, -0.051787879317998886, 0.096049301326274872, -0.039783615618944168, 0.17438024282455444, 0.12131963670253754, -0.17337337136268616, 0.012356770224869251, -0.11477325111627579, -0.027481604367494583, 0.14417131245136261, 0.14126607775688171, 0.063765376806259155, -0.162967249751091, -0.4554714560508728, 0.22484399378299713, -0.084144152700901031, -0.078305438160896301, -0.06970968097448349, 0.12479192018508911, 0.084038056433200836, 0.081071101129055023, -0.17266084253787994, -0.25419291853904724, -0.11565288901329041, -0.13996446132659912, -0.030677352100610733, -0.060226183384656906, 0.055300489068031311, -0.22944773733615875, 0.035837914794683456, 0.15533033013343811, -0.17498384416103363, -0.07600972056388855, 0.082860782742500305, 0.013770381920039654, 0.18671956658363342, -0.090668186545372009, -0.31595134735107422, 0.069289654493331909, -0.21071389317512512, -0.14976969361305237, 0.063330352306365967, 0.1662106066942215, 0.080642148852348328, 0.083504460752010345, -0.58634763956069946, -0.12125503271818161, -0.21128043532371521, -0.27923688292503357, -0.0098137129098176956, 0.13456636667251587, 0.2236032634973526, -0.067657411098480225, -0.21633577346801758, 0.40465369820594788, -0.13632026314735413, -0.073376543819904327, 0.11358742415904999, 0.034219693392515182, 0.04161221906542778, 0.099802970886230469, -0.30457672476768494, -0.06004016101360321, -0.053337663412094116, -0.091483220458030701, -0.1221032589673996, 0.07421884685754776, 0.078119680285453796, -0.28071951866149902, -0.36916732788085938, 0.090306021273136139, -0.29629242420196533, -0.21814434230327606, -0.089883722364902496, -0.03496190533041954, -0.096537664532661438, -0.10763657838106155, 0.050046257674694061, -0.27482029795646667, -0.13064147531986237, -0.12507040798664093, 0.024789754301309586, 0.0040157977491617203, -0.071350432932376862, 0.30516627430915833, -0.058709535747766495, -0.045989945530891418, -0.16561323404312134, -0.13422288000583649, 0.10307034105062485, 0.13754962384700775, 0.16573865711688995, -0.01831667497754097, -0.33346286416053772, -0.075981289148330688, -0.25683090090751648, -0.35337254405021667, 0.044781774282455444, 0.035912707448005676, 0.033980019390583038, 0.12938742339611053, 0.15397295355796814, 0.066815800964832306, -0.10973486304283142, 0.020580962300300598, -0.0028188037686049938, 0.054909273982048035, 0.25106519460678101, -0.17359746992588043, 0.25710216164588928, -0.077357642352581024, -0.15549468994140625, -0.16545821726322174, -0.20057679712772369, -0.14118117094039917, -0.0032737879082560539, -0.3169788122177124, 0.29858371615409851, 0.070865005254745483, 
  -0.070011146366596222, 0.24975070357322693, -0.22269947826862335, -0.0037985339295119047, 0.018685875460505486, 0.056142821907997131, 0.061695750802755356, 0.059254806488752365, 0.00067581486655399203, 0.025939119979739189, -0.15876351296901703, -0.23427966237068176, -0.16740503907203674, 0.0030197303276509047, -0.062523439526557922, 0.015031424351036549, -0.037816006690263748, 0.1576935201883316, -0.36712151765823364, -0.30139258503913879, -0.22009529173374176, -0.23140890896320343, -0.091133065521717072, 0.067035645246505737, 0.10762526839971542, 0.11790379881858826, -0.20865224301815033, -0.034303899854421616, -0.13244903087615967, -0.064639940857887268, -0.001144478446803987, 0.14660786092281342, 0.17731752991676331, 0.040167812258005142, -0.15445592999458313, -0.21610739827156067, 0.015421281568706036, -0.12142279744148254, 0.12052764743566513, 0.19750964641571045, 0.21898382902145386, 0.050887234508991241, -0.13971459865570068, -0.29122129082679749, -0.13271327316761017, -0.11069291830062866, 0.27970033884048462, 0.16547569632530212, -0.079786814749240875, 0.12759317457675934, -0.15226081013679504, 0.085065662860870361, -0.1742216944694519, 0.074500545859336853, -0.064310714602470398, 0.12952938675880432, -0.061955459415912628, 0.056269083172082901, -0.53447121381759644, -0.30349746346473694, -0.1578202098608017, 0.059681065380573273, -0.096301339566707611, -0.020259007811546326, 0.044396195560693741, -0.058270327746868134, -0.46076270937919617, -0.41245442628860474, -0.19390134513378143, -0.018433492630720139, 0.057094473391771317, -0.045212447643280029, 0.30819544196128845, 0.014611712656915188, -0.38655051589012146, -0.22030837833881378, -0.26891711354255676, 0.16445936262607574, 0.075398087501525879, 0.090136162936687469, 0.20175090432167053, -0.07117963582277298, -0.26880377531051636, -0.18133620917797089, -0.22237786650657654, -0.20576134324073792, 0.16513486206531525, 0.143684983253479, 0.21025422215461731, 0.038952894508838654, -0.46179652214050293, -0.15456883609294891, -0.15234410762786865, -0.12493054568767548, 0.1243194118142128, 0.19137923419475555, 0.24569523334503174, 0.093088217079639435, -0.31657937169075012, -0.050612460821866989, -0.19343455135822296, 0.10954155027866364, 0.19679713249206543, -0.058825608342885971, 0.2041572779417038, -0.076036766171455383, -0.36094012856483459, -0.42666494846343994, -0.098412930965423584, -0.22802253067493439, 0.18586964905261993, 0.10501066595315933, 0.11143055558204651, -0.075096890330314636, -0.55137497186660767, -0.4936826229095459, -0.22573938965797424, -0.16804516315460205, -0.17186449468135834, 0.21929584443569183, 0.14991328120231628, -0.090799354016780853, -0.41579261422157288, -0.37921983003616333, -0.43058398365974426, -0.21426455676555634, 0.15003883838653564, 0.12353350222110748, 0.033630214631557465, -0.11629867553710938, -0.35099712014198303, -0.42347550392150879, -0.3016488254070282, 0.027352727949619293, 0.080437235534191132, 0.14273256063461304, 0.25050538778305054, -0.10699086636304855, -0.47313234210014343, -0.47552180290222168, -0.29705557227134705, -0.05722307413816452, 0.053210854530334473, 0.07253602147102356, 0.19187818467617035, 0.25928613543510437, -0.44202008843421936, 0.086367353796958923, -0.31156471371650696, -0.19928255677223206, 0.086351357400417328, 0.085484929382801056, 0.13509206473827362, 0.082053810358047485, -0.36480253934860229, -0.34669345617294312, -0.24483476579189301, -0.36218464374542236, -0.0039043922442942858, -0.035358037799596786, 0.11584614217281342, 0.043016903102397919, -0.3250281810760498, -0.42587703466415405, -0.45868286490440369, -0.17952990531921387, 0.1925530880689621, 0.072131425142288208, 0.20564016699790955, -0.0030457726679742336, -0.27672466635704041, -0.36720773577690125, -0.41164019703865051, -0.060302983969449997, 0.28078266978263855, 0.0042483266443014145, 0.13133338093757629, 0.0092674056068062782, -0.50831001996994019, -0.30199456214904785, -0.27460357546806335, -0.19375841319561005, 0.09527558833360672, 0.09405478835105896, 0.05263136699795723, -0.025252129882574081, -0.47518438100814819, -0.45249262452125549, -0.41630023717880249, -0.43733301758766174, -0.097076781094074249, 0.18206238746643066, 0.14505189657211304, 0.044129487127065659, -0.17417919635772705, 0.055487927049398422, -0.035486627370119095, 0.13156761229038239, 0.076970912516117096, 0.099162071943283081, 0.050418335944414139, 0.23463962972164154, -0.44023731350898743, -0.37855041027069092, -0.37612265348434448, -0.29225262999534607, -0.1192699521780014, -0.064466886222362518, 0.2502785325050354, 0.087105691432952881, -0.27653473615646362, -0.36648270487785339, -0.38318505883216858, -0.48033615946769714, 0.098423086106777191, 0.35179382562637329, 0.28797027468681335, 0.072679363191127777, -0.21664227545261383, -0.24309217929840088, -0.31637129187583923, -0.16529300808906555, 0.10380465537309647, -0.010224181227385998, 0.18774981796741486, 0.18886470794677734, -0.3188205361366272, -0.2592303454875946, -0.27970221638679504, -0.19020776450634003, -0.031229211017489433, 0.19615274667739868, 0.050389505922794342, 0.028562283143401146, -0.099492713809013367, -0.21586775779724121, -0.28731212019920349, -0.01425658818334341, 0.087951987981796265, 0.079590402543544769, 0.14024063944816589, 0.17934921383857727, -0.11302100121974945, 0.077303513884544373, -0.17583903670310974, 0.0086270850151777267, 0.23937307298183441, 0.095063298940658569, 0.074260421097278595, 0.12991738319396973, -0.46132853627204895, -0.25061491131782532, -0.16846238076686859, -0.057431336492300034, -0.090720184147357941, -0.11543530225753784, 0.21251505613327026, 0.00095604942180216312, -0.54298073053359985, -0.32742947340011597, -0.15961210429668427, -0.24403747916221619, 0.20193737745285034, 0.15732558071613312, 0.14846682548522949, 0.011248469352722168, -0.40035825967788696, -0.32875746488571167, -0.26306277513504028, -0.30567032098770142, 0.14001408219337463, -0.20457828044891357, 0.07094891369342804, -0.00043518072925508022, -0.30338576436042786, -0.35990741848945618, -0.19197675585746765, -0.11480123549699783, -0.046886783093214035, 0.047266390174627304, 0.022843251004815102, 0.073840707540512085, -0.26778391003608704, -0.0085467435419559479, -0.16598820686340332, -0.03409898653626442, 0.085065454244613647, -0.1014159694314003, 
  -0.10223239660263062, 0.022773662582039833, 0.0080174533650279045, 0.031598489731550217, -0.018622379750013351, -0.049841832369565964, -0.021480090916156769, 0.054846588522195816, 0.052589505910873413, -0.030923925340175629, 0.053493771702051163, -0.12091682106256485, 0.15425018966197968, 0.034573543816804886, 0.048697933554649353, 0.13905264437198639, -0.045644696801900864, 0.0048839934170246124, 0.11890885978937149, 0.034517701715230942, -0.047454990446567535, 0.024929732084274292, -0.071885392069816589, 0.068987317383289337, 0.21569745242595673, 0.035290088504552841, 0.08656039834022522, -0.023159688338637352, 0.019651796668767929, 0.1384008526802063, 0.029594767838716507, 0.32129567861557007, 0.18030712008476257, -0.010615239851176739, 0.049894552677869797, 0.14745742082595825, -0.12125121057033539, -0.023364432156085968, 0.11292322725057602, 0.36394542455673218, 0.16634257137775421, 0.081389777362346649, -0.042089704424142838, -0.043618563562631607, -0.14629657566547394, 0.080198630690574646, 0.1350996196269989, 0.35561445355415344, -0.11463074386119843, -0.054848503321409225, 0.026674244552850723, -0.078553617000579834, -0.025317709892988205, -0.048712637275457382, -0.25744780898094177, -0.066244304180145264, -0.027151558548212051, -0.031457781791687012, -0.0045600342564284801, -0.013567495159804821, -0.063825361430644989, -0.0924367755651474, -0.16078715026378632, 0.10644139349460602, 0.12538926303386688, -0.071556597948074341, -0.029163558036088943, -0.08990391343832016, -0.15891920030117035, -0.028835823759436607, -0.27570423483848572, -0.063232064247131348, 0.046721030026674271, -0.038981851190328598, 0.020796092227101326, -0.00063959450926631689, -0.039071597158908844, -0.06699371337890625, -0.24939809739589691, 0.25414592027664185, 0.062719047069549561, -0.18225602805614471, 0.054064225405454636, -0.046108413487672806, -0.051498573273420334, 0.11433872580528259, -0.32776692509651184, -0.070873387157917023, -0.10829602926969528, 0.025661509484052658, -0.0015959383454173803, 0.096279919147491455, 0.024929454550147057, -0.047950971871614456, -0.42214161157608032, -0.032403778284788132, -0.017616482451558113, -0.11357437819242477, 0.057452261447906494, -0.0096512008458375931, 0.034732788801193237, 0.12339949607849121, -0.053999025374650955, -0.17274323105812073, -0.11504410952329636, 0.03507666289806366, -0.08811940997838974, 0.10622637718915939, -0.043926101177930832, -0.04987369105219841, -0.06722935289144516, -0.11690102517604828, -0.004732208326458931, -0.017600590363144875, 0.017195602878928185, 0.006219938863068819, -0.088424980640411377, 0.12692597508430481, 0.063705608248710632, -0.084512569010257721, -0.09697992354631424, 0.077049560844898224, 0.14770324528217316, -0.065568670630455017, 0.0019072358263656497, -0.094107836484909058, 0.0018176563316956162, -0.29604208469390869, -0.238737553358078, 0.0016807111678645015, 0.12215994298458099, 0.0061268056742846966, 0.14813442528247833, -0.07554219663143158, 0.097769297659397125, -0.024569973349571228, -0.21683132648468018, 0.064242146909236908, 0.026992976665496826, -0.12240161746740341, 0.095556192100048065, -0.20627622306346893, -0.03826754167675972, 0.09701836109161377, 0.066101647913455963, -0.014662429690361023, 0.14746966958045959, -0.054609596729278564, 0.092059612274169922, 0.046824384480714798, 0.22246603667736053, -0.041669055819511414, -0.090437106788158417, 0.25573399662971497, -0.025295769795775414, 0.17080308496952057, -0.025051970034837723, -0.056573759764432907, 0.16084834933280945, -0.14345040917396545, -0.0011816862970590591, 0.23731024563312531, 0.050842635333538055, 0.037746738642454147, -0.060803290456533432, -0.085318714380264282, 0.022765764966607094, 0.12601450085639954, -0.10407307744026184, 0.16820664703845978, 0.033164374530315399, -0.066428698599338531, 0.032301992177963257, -0.10894741863012314, 0.08329356461763382, 0.068377159535884857, 0.04019637405872345, -0.0067148045636713505, 0.14872030913829803, 0.071019090712070465, -0.024027014151215553, 0.079832099378108978, 0.40948781371116638, -0.080690160393714905, 0.017124412581324577, 0.20227517187595367, -0.068261787295341492, 0.078161664307117462, -0.031564310193061829, 0.1051967591047287, 0.15513327717781067, -0.0024547274224460125, -0.0076935025863349438, -0.0074105467647314072, 0.090839050710201263, 0.044999178498983383, 0.064659208059310913, 0.25119808316230774, 0.21977229416370392, 0.00735427625477314, 0.03877093642950058, -0.10727424919605255, -0.047378841787576675, 0.0027502174489200115, 0.11898967623710632, -0.083768472075462341, 0.43320208787918091, 0.16875806450843811, 0.13882943987846375, 0.10355046391487122, 0.032756522297859192, 0.056762829422950745, -0.040418453514575958, -0.11863003671169281, 0.4865933358669281, -0.16623964905738831, 0.086413100361824036, 0.1323544979095459, -0.049191173166036606, 0.098997734487056732, -0.043764282017946243, 0.010074677877128124, 0.17284232378005981, -0.31135293841362, -0.12505240738391876, 0.047661252319812775, 0.11977896839380264, -0.010202069766819477, 0.011236142367124557, 0.15783713757991791, 0.25690710544586182, 0.079554073512554169, -0.054359808564186096, -0.08291441947221756, 0.0080133303999900818, -0.027853420004248619, 0.02512090839445591, 0.25582778453826904, 0.12776780128479004, -0.046081975102424622, 0.28673166036605835, -0.031770914793014526, -0.010234915651381016, 0.14582692086696625, 0.17127835750579834, 0.096743397414684296, -0.10312400758266449, 0.11175806075334549, 0.094411745667457581, -0.17292612791061401, 0.061399683356285095, -0.084235221147537231, 0.032738383859395981, -0.27137517929077148, -0.02886061929166317, 0.067226506769657135, 0.033864162862300873, -0.0829586461186409, 0.13430283963680267, 0.16293281316757202, -0.15251797437667847, 0.07429194450378418, 0.04253857210278511, 0.046656269580125809, 0.093068718910217285, 0.17898489534854889, 0.032402697950601578, 0.050314724445343018, -0.062682487070560455, -0.034333992749452591, 0.03955516591668129, -0.18476864695549011, 0.077361039817333221, 0.045484170317649841, 0.13008426129817963, 0.015760473906993866, -0.025275023654103279, 0.061319243162870407, -0.24715442955493927, -0.16173341870307922, 0.018324991688132286, -0.099610447883605957, 0.12872795760631561, 0.10088022798299789, 0.15640346705913544, 0.40151822566986084, -0.43021702766418457, 0.056226160377264023, 
};
const TfArray<2, int> tensor_dimension11 = { 2, { 3,288 } };
const TfArray<4, int> tensor_dimension12 = { 4, { 1,96,96,12 } };
const TfArray<4, int> tensor_dimension13 = { 4, { 1,48,48,12 } };
const TfArray<4, int> tensor_dimension14 = { 4, { 1,48,48,12 } };
const TfArray<4, int> tensor_dimension15 = { 4, { 1,24,24,12 } };
const TfArray<4, int> tensor_dimension16 = { 4, { 1,24,24,8 } };
const TfArray<4, int> tensor_dimension17 = { 4, { 1,12,12,8 } };
const TfArray<4, int> tensor_dimension18 = { 4, { 1,12,12,8 } };
const TfArray<4, int> tensor_dimension19 = { 4, { 1,6,6,8 } };
const TfArray<2, int> tensor_dimension20 = { 2, { 1,288 } };
const TfArray<2, int> tensor_dimension21 = { 2, { 1,3 } };
const TfArray<2, int> tensor_dimension22 = { 2, { 1,3 } };
const TfLiteConvParams opdata0 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs0 = { 3, { 0,5,1 } };
const TfArray<1, int> outputs0 = { 1, { 12 } };
const TfLitePoolParams opdata1 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs1 = { 1, { 12 } };
const TfArray<1, int> outputs1 = { 1, { 13 } };
const TfLiteConvParams opdata2 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs2 = { 3, { 13,6,2 } };
const TfArray<1, int> outputs2 = { 1, { 14 } };
const TfLitePoolParams opdata3 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs3 = { 1, { 14 } };
const TfArray<1, int> outputs3 = { 1, { 15 } };
const TfLiteConvParams opdata4 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs4 = { 3, { 15,7,3 } };
const TfArray<1, int> outputs4 = { 1, { 16 } };
const TfLitePoolParams opdata5 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs5 = { 1, { 16 } };
const TfArray<1, int> outputs5 = { 1, { 17 } };
const TfLiteConvParams opdata6 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs6 = { 3, { 17,8,4 } };
const TfArray<1, int> outputs6 = { 1, { 18 } };
const TfLitePoolParams opdata7 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs7 = { 1, { 18 } };
const TfArray<1, int> outputs7 = { 1, { 19 } };
const TfLiteReshapeParams opdata8 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs8 = { 2, { 19,9 } };
const TfArray<1, int> outputs8 = { 1, { 20 } };
const TfLiteFullyConnectedParams opdata9 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs9 = { 3, { 20,11,10 } };
const TfArray<1, int> outputs9 = { 1, { 21 } };
const TfLiteSoftmaxParams opdata10 = { 1 };
const TfArray<1, int> inputs10 = { 1, { 21 } };
const TfArray<1, int> outputs10 = { 1, { 22 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 442368, (TfLiteIntArray*)&tensor_dimension0, 110592, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 48, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 48, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 32, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 32, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 1296, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 5184, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data7, (TfLiteIntArray*)&tensor_dimension7, 3456, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data8, (TfLiteIntArray*)&tensor_dimension8, 2304, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data9, (TfLiteIntArray*)&tensor_dimension9, 8, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data10, (TfLiteIntArray*)&tensor_dimension10, 12, },
  { kTfLiteMmapRo, kTfLiteFloat32, (void*)tensor_data11, (TfLiteIntArray*)&tensor_dimension11, 3456, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension12, 442368, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 442368, (TfLiteIntArray*)&tensor_dimension13, 110592, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension14, 110592, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 110592, (TfLiteIntArray*)&tensor_dimension15, 27648, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension16, 18432, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 18432, (TfLiteIntArray*)&tensor_dimension17, 4608, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension18, 4608, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 4608, (TfLiteIntArray*)&tensor_dimension19, 1152, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension20, 1152, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 1152, (TfLiteIntArray*)&tensor_dimension21, 12, },
  { kTfLiteArenaRw, kTfLiteFloat32, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension22, 12, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs4, (TfLiteIntArray*)&outputs4, const_cast<void*>(static_cast<const void*>(&opdata4)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs5, (TfLiteIntArray*)&outputs5, const_cast<void*>(static_cast<const void*>(&opdata5)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs6, (TfLiteIntArray*)&outputs6, const_cast<void*>(static_cast<const void*>(&opdata6)), OP_CONV_2D, },
  { (TfLiteIntArray*)&inputs7, (TfLiteIntArray*)&outputs7, const_cast<void*>(static_cast<const void*>(&opdata7)), OP_MAX_POOL_2D, },
  { (TfLiteIntArray*)&inputs8, (TfLiteIntArray*)&outputs8, const_cast<void*>(static_cast<const void*>(&opdata8)), OP_RESHAPE, },
  { (TfLiteIntArray*)&inputs9, (TfLiteIntArray*)&outputs9, const_cast<void*>(static_cast<const void*>(&opdata9)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs10, (TfLiteIntArray*)&outputs10, const_cast<void*>(static_cast<const void*>(&opdata10)), OP_SOFTMAX, },
};

static void init_tflite_tensor(size_t i, TfLiteTensor *tensor) {
  tensor->type = tensorData[i].type;
  tensor->is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  tensor->allocation_type = tensorData[i].allocation_type;
#else
  tensor->allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
  tensor->bytes = tensorData[i].bytes;
  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  if(tensor->allocation_type == kTfLiteArenaRw){
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
      tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
  tensor->quantization.type = kTfLiteNoQuantization;

}

static void init_tflite_eval_tensor(int i, TfLiteEvalTensor *tensor) {

  tensor->type = tensorData[i].type;

  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  auto allocation_type = tensorData[i].allocation_type;
  if(allocation_type == kTfLiteArenaRw) {
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
    tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
}

static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBufferImpl(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  uint32_t align_bytes = (bytes % 16) ? 16 - (bytes % 16) : 0;

  if (current_location - (bytes + align_bytes) < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  // align to the left aligned boundary of 16 bytes
  current_location -= 15; // for alignment
  current_location += 16 - ((uintptr_t)(current_location) & 15);

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArenaImpl(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBufferImpl(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBufferImpl(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static const uint16_t TENSOR_IX_UNUSED = 0x7FFF;

static void ResetTensors() {
  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    tflTensors[ix].index = TENSOR_IX_UNUSED;
  }
  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    tflEvalTensors[ix].index = TENSOR_IX_UNUSED;
  }
}

static TfLiteTensor* GetTensorImpl(const struct TfLiteContext* context,
                               int tensor_idx) {

  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    // already used? OK!
    if (tflTensors[ix].index == tensor_idx) {
      return &tflTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_tensor(tensor_idx, &tflTensors[ix].tensor);
      tflTensors[ix].index = tensor_idx;
      return &tflTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_TENSOR_COUNT (%d)\n", MAX_TFL_TENSOR_COUNT);
  return nullptr;
}

static TfLiteEvalTensor* GetEvalTensorImpl(const struct TfLiteContext* context,
                                       int tensor_idx) {

  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    // already used? OK!
    if (tflEvalTensors[ix].index == tensor_idx) {
      return &tflEvalTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflEvalTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_eval_tensor(tensor_idx, &tflEvalTensors[ix].tensor);
      tflEvalTensors[ix].index = tensor_idx;
      return &tflEvalTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_EVAL_COUNT (%d)\n", (int)MAX_TFL_EVAL_COUNT);
  return nullptr;
}

class EonMicroContext : public MicroContext {
 public:
  EonMicroContext(): MicroContext(nullptr, nullptr, nullptr) { }

  void* AllocatePersistentBuffer(size_t bytes) {
    return AllocatePersistentBufferImpl(nullptr, bytes);
  };
  TfLiteStatus RequestScratchBufferInArena(size_t bytes,
                                           int* buffer_index) {
  return RequestScratchBufferInArenaImpl(nullptr, bytes, buffer_index);
  }
  void* GetScratchBuffer(int buffer_index) {
    return GetScratchBufferImpl(nullptr, buffer_index);
  }

  TfLiteTensor* AllocateTempTfLiteTensor(int tensor_index) {
    return GetTensorImpl(nullptr, tensor_index);
  }
  void DeallocateTempTfLiteTensor(TfLiteTensor* tensor) {
    return;
  }
  bool IsAllTempTfLiteTensorDeallocated() {
    return true;
  }

  TfLiteEvalTensor* GetEvalTensor(int tensor_index) {
    return GetEvalTensorImpl(nullptr, tensor_index);
  }
};

} // namespace

TfLiteStatus tflite_learn_5_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;

  EonMicroContext micro_context_;
  ctx.impl_ = static_cast<void*>(&micro_context_);
  ctx.AllocatePersistentBuffer = &AllocatePersistentBufferImpl;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArenaImpl;
  ctx.GetScratchBuffer = &GetScratchBufferImpl;
  ctx.GetTensor = &GetTensorImpl;
  ctx.GetEvalTensor = &GetEvalTensorImpl;
  ctx.tensors_size = 23;
  for (size_t i = 0; i < 23; ++i) {
    TfLiteTensor tensor;
    init_tflite_tensor(i, &tensor);
    if (tensor.allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tensor.data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_CONV_2D] = Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = Register_MAX_POOL_2D();
  registrations[OP_RESHAPE] = Register_RESHAPE();
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t i = 0; i < 11; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
tflNodes[i].custom_initial_data = nullptr;
      tflNodes[i].custom_initial_data_size = 0;
if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for (size_t i = 0; i < 11; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      ResetTensors();

      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteStatus tflite_learn_5_input(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(inTensorIndices[index], tensor);
  return kTfLiteOk;
}

static const int outTensorIndices[] = {
  22, 
};
TfLiteStatus tflite_learn_5_output(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(outTensorIndices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_5_invoke() {
  for (size_t i = 0; i < 11; ++i) {
    ResetTensors();

    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_5_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
